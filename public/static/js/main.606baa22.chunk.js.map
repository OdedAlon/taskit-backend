{"version":3,"sources":["services/http-service.js","services/socketService.js","services/util-service.js","services/board-service.js","store/action/board.action.js","cmps/Header.jsx","cmps/MemberIcon.jsx","cmps/BoardActivitiesList.jsx","assets/img/loder.gif","cmps/BoardHeader.jsx","cmps/CardChecklistTodo.jsx","cmps/CardAddTodo.jsx","cmps/CardCheckList.jsx","cmps/CardCheckListContainer.jsx","cmps/CardActivitiesList.jsx","cmps/CardDetailsMembers.jsx","cmps/CardDetailsLabels.jsx","cmps/CardAddCheckList.jsx","cmps/CardMember.jsx","cmps/CardMemberList.jsx","cmps/CardLabel.jsx","cmps/CardLabelList.jsx","cmps/CardCoverList.jsx","cmps/CardDetailsModal.jsx","cmps/CardDetailsDate.jsx","cmps/AttachmentsList.jsx","cmps/CardDescription.jsx","cmps/SmartTitleEdit.jsx","cmps/CardDateSetter.jsx","cmps/CardComment.jsx","services/cloudinaryService.js","cmps/UplodeImg.jsx","cmps/CardDetails.jsx","cmps/CardPreview.jsx","cmps/CardList.jsx","cmps/CardAdd.jsx","cmps/GroupPreview.jsx","cmps/GroupAdd.jsx","cmps/GroupList.jsx","pages/BoardApp.jsx","cmps/BoardAdd.jsx","pages/Boards.jsx","pages/DashboardAnalisys.jsx","routes.js","pages/Home.jsx","pages/About.jsx","App.jsx","reportWebVitals.js","store/reducers/board.reducer.js","store/reducers/user.reducer.js","store/store.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","window","location","assign","socketService","setup","socket","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","io","reconnection","utilService","makeId","length","txt","possible","i","charAt","Math","floor","random","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","boardService","query","getById","addBoard","updateBoard","filterBy","boards","Promise","resolve","boardId","board","newBoard","_deepCloneBoard","lists","groups","map","group","cards","filter","card","title","toLowerCase","includes","_id","result","JSON","parse","stringify","backgroundURL","isTemplate","loadBoard","dispatch","type","saveCard","groupId","action","item","id","groupIdx","findIndex","cardIdx","currCard","_updateActivityList","newCard","_getNewCardObj","push","members","labels","attachments","checklist","currGroup","createdAt","Date","now","_getGroupById","find","activity","group1","txtCard","txtBoard","group2","fullname","group3","group4","group5","group6","group7","group8","group9","group10","attachment","activities","unshift","Header","className","exact","to","MemberIcon","member","initials","split","name","slice","imgUrl","style","backgroundImage","BoardActivitiesList","byMember","fromNow","BoardHeader","state","prevTitle","isMenuOn","isEditing","isSetBackGround","inputRef","React","createRef","toggleMenu","setState","toggleSetBackGround","toggleEdditing","handleChange","ev","target","value","props","onSetFilter","handleKeyPress","key","onSubmit","onUpdateBoard","this","onClick","ref","onBlur","placeholder","onChange","onKeyPress","onFocus","select","index","onSetBackground","src","logo","alt","Component","CardChecklistTodo","isDone","txtValue","todo","stopPropagation","checked","toggleEditing","removeText","getTodoClassName","doneClass","preventDefault","updateChecklist","updateTodo","onRemove","onUpdateChecklist","prevProps","prevState","displayCompleted","Fragment","Checkbox","color","autoFocus","Button","CardAddTodo","onToggleMode","onEnter","onAddTodo","current","focus","CardCheckList","tasksCompleted","totalTasks","showDialog","isNew","setTasksStatus","list","todos","forEach","updateNewTodo","toggleDisplayCompleted","getDisplayCheckedBtn","btnContent","openDialog","closeDialog","getPrecentegesCompleted","round","newTodo","todoIdx","splice","onUpdateCardProps","onRemoveChecklist","checklistIdx","currList","LinearProgress","borderRadius","variant","Dialog","onClose","open","DialogTitle","DialogContent","DialogContentText","DialogActions","CardCheckListContainer","CardActivitiesList","href","commentTxt","CardDetailsMembers","onToggle","CardDetailsLabels","lables","label","CardAddCheckList","onAdd","modalLoc","CardMember","boardMember","isChecked","cardMembers","Boolean","toggleMember","CardMemberList","memberName","boardMembers","onClickBoardMember","cardMember","removedMember","addedMember","CardLabel","cardLabels","boardLabel","toggleLabel","onClickEdit","CardLabelList","labelName","boardLabels","editedLabel","colors","onClickBoardLabel","cardlabel","onEditSubmit","labelIdx","onUpdateBoardLabels","handleLabelNameChange","onSetColor","CardCoverList","cover","onSaveCover","CardDetailsModal","modalType","onToggleModal","DynamicCmp","CardDetailsDate","checkStatus","dueDate","isCompleted","displayDueDate","time","toString","getUTCDate","getHours","getMinutes","AttachmentsList","CardDescription","description","setDescriptionFromProps","toggleEditMode","onSave","descriptionText","descriptionContainer","SmartTitleEdit","onSaveGroup","CardDateSetter","noValidate","TextField","InputLabelProps","shrink","required","fullwidth","lastGetURL","CardComment","isEditModeOn","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","then","json","secure_url","catch","err","error","getLastUplode","UplodeImg","height","width","isUploading","accept","_CardDetails","isCardDueDateShowenRight","isDueDateListShowenLeft","isNewTodoShown","isModalShown","onLoadCard","cardId","onToggleDueDateRight","isDueDateListShowenRight","onToggleDueDateLeft","onCloseModals","isCardDueDateShowenLeft","history","isCardMemberListShowenLeft","onSaveCard","display","multiple","onAttachmentFile","htmlFor","mapDispatchToProps","CardDetails","connect","boardModule","CardPreview","onRemoveCard","getActivitiesByCardId","onOpenPreviewLabels","isLebelOpen","toggelQuickEditor","isQuickCardEditorOpen","useState","previousX","setPreviousX","cardPreviewDragClass","setCardPreviewDragClass","handleDrag","transform","provided","draggableProps","currentXPosition","match","countDoneTodos","count","oneList","countTodos","draggableId","snapshot","innerRef","dragHandleProps","isDragging","event","toggleDueDate","CardList","droppableId","droppableProps","CardAdd","onAddCard","GroupPreview","onRemoveGroup","GroupAdd","GroupList","direction","_BoardApp","currGroupIdx","onLoadBoard","saveGroup","removeGroup","removeCard","onSetGroupIdx","idx","background","bgImg","updateBoardSockets","BoardApp","BoardAdd","newboard","setBackground","URL","onNewBoard","toggleModal","_Boards","addNewModal","onLoadBoards","loadBoards","TemplateBoards","NoTemplateBoards","Boards","_DashboardAnalisys","getRndHexColor","getDataForChart","mapObject","rndClrs","Object","keys","datasets","values","backgroundColor","hoverBackgroundColor","dashboardNumbers","numOfMembers","unarchivedCardsCount","archivedCardsCount","archivedCards","archivedAt","todosCount","reduce","acc","total","colorClass","cardsByGroups","cardsByGroupsMap","unArchivedCards","cardsByMembers","cardsByMembersMap","memberCardsCount","j","some","currMember","options","legend","scales","xAxes","ticks","beginAtZero","cardsByLabels","colorsMap","green","yellow","orange","red","purple","blue","grey","black","labelsMap","currLabel","cardsWithLabelCount","borderWidth","strokeColor","highlightFill","highlightStroke","yAxes","routes","path","component","_App","onDragEnd","destination","source","startGroupIndex","endGroupIndex","newCardsGroup","Array","from","newGroup","newGroups","updatePosition","destinationGroup","formerGroup","formerCardIndex","newCardsArray","newGroupsOrder","route","newBoardPositioning","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","users","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","userModule","loggedinUser","user","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","register"],"mappings":"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","file":"static/js/main.606baa22.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            //     router.push('/login')\r\n            // }\r\n            throw err\r\n        }\r\n    }\r\n}","import { httpService } from './http-service'\r\nimport io from 'socket.io-client'\r\n\r\nexport const socketService = createSocketService()\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n\r\nlet socket = io(baseUrl, { reconnection: false })\r\n\r\nfunction createSocketService() {\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socketIsReady = true;\r\n    },\r\n\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb = null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n","import { socketService } from './socketService'\r\nimport { httpService } from './http-service'\r\nimport { utilService } from './util-service'\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    addBoard,\r\n    updateBoard,\r\n}\r\n\r\nasync function query(filterBy) {\r\n    const boards = await httpService.get('board', filterBy)\r\n    return Promise.resolve(boards)\r\n}\r\n\r\nasync function getById(boardId, filterBy = '') {\r\n    const board = await httpService.get(`board/${boardId}`)\r\n    let newBoard = _deepCloneBoard(board)\r\n    let lists = newBoard.groups.map(group => {\r\n        return group.cards.filter(card => card.title.toLowerCase().includes(filterBy.toLowerCase()))\r\n    })\r\n    for (let i = 0; i < lists.length; i++) {\r\n        newBoard.groups[i].cards = lists[i]\r\n    }\r\n    return newBoard\r\n}\r\n\r\nasync function updateBoard(board) {\r\n    const result = await httpService.put(`board/${board._id}`, board)\r\n    socketService.emit('board update', board)\r\n    return result\r\n}\r\n\r\nfunction _deepCloneBoard(board) {\r\n    return JSON.parse(JSON.stringify(board))\r\n}\r\n\r\nasync function addBoard(title, backgroundURL, board) {\r\n    let newBoard;\r\n    if (board) { //template duplication\r\n\r\n        newBoard = _deepCloneBoard(board)\r\n        newBoard.isTemplate = false\r\n    } else {\r\n        newBoard = {\r\n            \"title\": title,\r\n            \"isArchived\": false,\r\n            \"isTemplate\": false,\r\n            \"labels\": [\r\n                {\r\n                    \"id\": \"l101\",\r\n                    \"name\": \"Teamwork\",\r\n                    \"color\": \"green\"\r\n                },\r\n                {\r\n                    \"id\": \"l102\",\r\n                    \"name\": \"Urgent\",\r\n                    \"color\": \"yellow\"\r\n                },\r\n                {\r\n                    \"id\": \"l103\",\r\n                    \"name\": \"Pay attention\",\r\n                    \"color\": \"orange\"\r\n                },\r\n                {\r\n                    \"id\": \"l104\",\r\n                    \"name\": \"Important\",\r\n                    \"color\": \"red\"\r\n                },\r\n                {\r\n                    \"id\": \"l105\",\r\n                    \"name\": \"Default\",\r\n                    \"color\": \"purple\"\r\n                },\r\n                {\r\n                    \"id\": \"l106\",\r\n                    \"name\": \"Default\",\r\n                    \"color\": \"blue\"\r\n                }\r\n            ],\r\n            \"activities\": [],\r\n            \"createdBy\": {\r\n                // \"_id\": \"5f6a2532173d861c5d78c332\",\r\n                \"fullname\": \"mike awsome\",\r\n                \"imgUrl\": `https://robohash.org/5f6a2528973d861c5d78c355?set=set4`\r\n            },\r\n            \"style\": {\r\n                \"id\": utilService.makeId(),\r\n                \"fontClr\": \"#f9f9f9\",\r\n                \"bgImg\": backgroundURL\r\n            },\r\n            \"members\": [\r\n                {\r\n                    \"_id\": \"5f6a2528973d861c5d78c355\",\r\n                    \"fullname\": \"Puki Ben David\",\r\n                    \"imgUrl\": `https://robohash.org/5f6a2528973d861c5d78c355?set=set4`\r\n                },\r\n                {\r\n                    \"_id\": \"5f6a2532173d861c5d78c332\",\r\n                    \"fullname\": \"Mike Awsome\",\r\n                    \"imgUrl\": `https://robohash.org/5f6a2528973d861c5d78c355?set=set4`\r\n                },\r\n                {\r\n                    \"_id\": \"5f6a2532173d861c5d78c321\",\r\n                    \"fullname\": \"Tuki Taka\",\r\n                    \"imgUrl\": `https://robohash.org/5f6a2528973d861c5d78c355?set=set4`\r\n                }\r\n            ],\r\n            \"groups\": [{\r\n                \"id\": utilService.makeId(),\r\n                \"title\": \"My new group!\",\r\n                \"archivedAt\": false,\r\n                \"cards\": []\r\n            }]\r\n\r\n        }\r\n    }\r\n\r\n    newBoard = await httpService.post('board', newBoard)\r\n    return Promise.resolve((_deepCloneBoard(newBoard)))\r\n}\r\n\r\n\r\n\r\n","import { boardService } from '../../services/board-service'\r\nimport { utilService } from '../../services/util-service'\r\n\r\nexport function loadBoard(boardId, filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.getById(boardId, filterBy)\r\n            dispatch({ type: 'SET_BOARD', board })\r\n            return board\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loadBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveCard(card, groupId, board, action = '', item = '') {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = _deepCloneBoard(board)\r\n            if (card.id) {\r\n                const groupIdx = newBoard.groups.findIndex(group => group.id === groupId)\r\n                const cardIdx = newBoard.groups[groupIdx].cards.findIndex(currCard => {\r\n                    return (currCard.id === card.id)\r\n                })\r\n                newBoard.groups[groupIdx].cards[cardIdx] = card\r\n                if (action) newBoard = _updateActivityList(newBoard, card, action, item)\r\n            } else {\r\n                const newCard = _getNewCardObj(groupId)\r\n                newCard.title = card.title\r\n                const groupIdx = newBoard.groups.findIndex(group => group.id === groupId)\r\n                newBoard.groups[groupIdx].cards.push(newCard)\r\n                if (action) newBoard = _updateActivityList(newBoard, newCard, action, item)\r\n            }\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            dispatch({ type: 'SET_BOARD', board: board })\r\n            console.log(`BoardActions: Cannot perform the change, Error in ${card.id ? 'update card' : 'add card'} ${err}`)\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveGroup(group, board, action = '') {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = _deepCloneBoard(board)\r\n            if (group.id) {\r\n                const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id)\r\n                newBoard.groups[groupIdx] = group\r\n            } else {\r\n                group.id = utilService.makeId()\r\n                group.cards = []\r\n                newBoard.groups.push(group)\r\n                newBoard = _updateActivityList(newBoard, group, action)\r\n            }\r\n\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log(`BoardActions: err in ${group.id ? 'update group' : 'add group'}${err}`)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeCard(card, board) { // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = _deepCloneBoard(board)\r\n            const groupIdx = newBoard.groups.findIndex(group => group.id === card.currGroup.groupId)\r\n            const cardIdx = newBoard.groups[groupIdx].cards.findIndex(currCard => currCard.id === card.id)\r\n            newBoard.groups[groupIdx].cards.splice(cardIdx, 1)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('BoardActions: err in removeCard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeGroup(group, board, action) { // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = _deepCloneBoard(board)\r\n            const groupIdx = newBoard.groups.findIndex(currGroup => currGroup.id === group.id)\r\n            newBoard.groups.splice(groupIdx, 1)\r\n            newBoard = _updateActivityList(newBoard, group, action)\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('BoardActions: err in removeGroup', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updatePosition(newBoardPositioning) {\r\n    return async dispatch => {\r\n        try {\r\n            let newBoard = JSON.parse(JSON.stringify(newBoardPositioning))\r\n            dispatch({ type: 'SET_BOARD', board: newBoardPositioning })\r\n            await boardService.updateBoard(newBoard)\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(board) {\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = JSON.parse(JSON.stringify(board))\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n            await boardService.updateBoard(newBoard) // updating the DB\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoardSockets(board) {\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = JSON.parse(JSON.stringify(board))\r\n            dispatch({ type: 'SET_BOARD', board: newBoard })\r\n        } catch (err) {\r\n            console.log('error updating board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(title, backgroundURL, history, board = null) {\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = await boardService.addBoard(title, backgroundURL, board)\r\n            history.push(`/board/${newBoard._id}`)\r\n            dispatch({ type: 'ADD_BOARD', board: newBoard })\r\n        } catch (err) {\r\n            console.log('error adding board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoards() {\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log(`BoardsActions: err in get board'}${err}`)\r\n        }\r\n    }\r\n}\r\n\r\nfunction _deepCloneBoard(board) {\r\n    return JSON.parse(JSON.stringify(board))\r\n}\r\n\r\nfunction _getNewCardObj(groupId) {\r\n    return {\r\n        id: utilService.makeId(),\r\n        members: [],\r\n        labels: [],\r\n        attachments: [],\r\n        checklist: [],\r\n        currGroup: { groupId },\r\n        createdAt: Date.now()\r\n    }\r\n}\r\n\r\nfunction _getGroupById(board, id) {\r\n    return board.groups.find(group => group.id === id)\r\n}\r\n\r\nfunction _updateActivityList(board, data, action, item) {\r\n    let activity = {\r\n        \"id\": utilService.makeId(),\r\n        \"txtCard\": \"\",\r\n        \"txtBoard\": \"\",\r\n        \"commentTxt\": \"\",\r\n        \"createdAt\": Date.now(),\r\n        \"byMember\": {\r\n            // Change it to current logged in user\r\n            \"fullname\": \"Gad Refaeli\",\r\n            \"imgUrl\": \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622668300/members%20taskit/gad_ljlro4.jpg\",\r\n            \"_id\": \"5f6a2532173d861c5d78c321\"\r\n        }\r\n    }\r\n    switch (action) {\r\n        case 'ADD_CARD':\r\n            let group1 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = `added this card to ${group1.title} `\r\n            activity.txtBoard = `added ${data.title} to ${group1.title} `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            // activity.byMember = currLoggedInMember\\\r\n            break;\r\n        case 'ADD_MEMBER':\r\n            let group2 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` added ${item.fullname} to this card `\r\n            activity.txtBoard = ` added ${item.fullname} to ${group2.title} `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            // activity.byMember = currLoggedInMember\r\n            break\r\n        case 'REMOVE_MEMBER':\r\n            let group3 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` removed ${item.fullname} to this card `\r\n            activity.txtBoard = ` removed ${item.fullname} to ${group3.title} `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            // activity.byMember = currLoggedInMember\r\n            break\r\n        case 'ADD_CHECKLIST':\r\n            let group4 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` added ${item.title} to this card `\r\n            activity.txtBoard = ` added ${item.title} to ${group4.title} `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            // activity.byMember = currLoggedInMember\r\n            break\r\n        case 'REMOVE_CHECKLIST':\r\n            let group5 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` removed ${item.title} from this card `\r\n            activity.txtBoard = ` removed ${item.title} from ${group5.title} `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            // activity.byMember = currLoggedInMember\r\n            break\r\n        case 'ADD_GROUP':\r\n            activity.txtBoard = ` added ${data.title} to this board `\r\n            break\r\n        case 'REMOVE_GROUP':\r\n            activity.txtBoard = ` archived list ${data.title} `\r\n            break\r\n        case 'COMPLETE_TASK':\r\n            let group6 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` completed ${item.title} on this card `\r\n            activity.txtBoard = ` completed ${item.title} on ${group6.title} `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            break\r\n        case 'INCOMPLETE_TASK':\r\n            let group7 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` marked ${item.title} incomplete on this card `\r\n            activity.txtBoard = ` marked ${item.title} incomplete on ${group7.title} `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            break\r\n        case 'COMPLETE_DUEDATE':\r\n            let group8 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` marked the due date complete `\r\n            activity.txtBoard = ` marked the due date on ${group8.title} complete `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            break\r\n        case 'INCOMPLETE_DUEDATE':\r\n            let group9 = _getGroupById(board, data.currGroup.groupId)\r\n            activity.txtCard = ` marked the due date incomplete `\r\n            activity.txtBoard = ` marked the due date on ${group9.title} incomplete `\r\n            activity.card = {\r\n                \"id\": data.id,\r\n                \"title\": data.title,\r\n            }\r\n            break\r\n        case 'ATTACHMENT':\r\n            let group10 = _getGroupById(board, item.currGroup.groupId)\r\n            activity.attachment = ` attached ${data.attachments[0]} to this card `\r\n            activity.txtBoard = ` attached ${data.attachments[0]} to ${group10.title} `\r\n            activity.card = {\r\n                \"id\": item.id,\r\n                \"title\": item.title,\r\n            }\r\n            break\r\n        default:\r\n            break;\r\n    }\r\n    board.activities.unshift(activity)\r\n    return board\r\n}\r\n","import { NavLink } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className=\"main-header\">\r\n            <nav>\r\n                <div className=\"main-header-left\">\r\n                    <NavLink exact to=\"/\"><button className=\"more-apps main-nav-btn\"></button></NavLink>\r\n                    <NavLink exact to=\"/\"><button className=\"home main-nav-btn\"></button></NavLink>\r\n                    <NavLink className=\"boards main-nav-btn\" to=\"/boards\"><span>Boards</span></NavLink>\r\n                </div>\r\n                <div className=\"logo\"></div>\r\n                <div className=\"main-header-right\">\r\n                    <NavLink to=\"/about\"><button className=\"create-board main-nav-btn\"></button></NavLink>\r\n                    <button className=\"about main-nav-btn\"></button>\r\n                    <NavLink to=\"/about\"><button className=\"notifications main-nav-btn\"></button></NavLink>\r\n                    <div className=\"user-img\">G</div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}\r\n","export function MemberIcon(member) {\r\n\r\n  const splitedName = member.member.fullname.split(' ');\r\n  let initials = splitedName.map(name => name[0])\r\n  initials = initials.slice(0, 2);\r\n\r\n  return (\r\n    <>\r\n      {member.member.imgUrl ? <span className={`user-img-chat-large`} style={{ backgroundImage: `url(${member.member.imgUrl})` }}></span> : <span className=\"user-img-chat\">{initials}</span>}\r\n    </>\r\n  )\r\n}","import { MemberIcon } from './MemberIcon'\nimport Moment from 'react-moment'\nimport React from 'react'\n\nexport function BoardActivitiesList({ activities }) {\n    if (!activities) return <></>\n    return (\n        <span className=\"activity-list\">\n            {activities.map(activity => {\n                return <div className=\"activity-list-container\" key={activity.id}>\n                    <div className=\"activity-list-container-icon-txt\" >\n                        <MemberIcon member={activity.byMember} size={'small'} />\n                        <div className=\"activity-list-content\" >\n                            <div>\n                                <span className=\"activity-list-name\">{activity.byMember.fullname.split(' ')[0]}</span>\n                                <span className=\"activity-list-txt\">{activity.txtBoard} </span>\n                            </div>\n                            <span className=\"activity-list-time\"><Moment fromNow>{activity.createdAt}</Moment></span>\n                        </div>\n                    </div>\n                </div>\n            })}\n        </span>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/loder.e96c5e0e.gif\";","import { BoardActivitiesList } from './BoardActivitiesList.jsx'\nimport logo from '../assets/img/loder.gif'\nimport { NavLink } from 'react-router-dom'\nimport React, { Component } from 'react'\n\nexport class BoardHeader extends Component {\n\n  state = {\n    title: '',\n    board: null,\n    prevTitle: '',\n    filterBy: '',\n    isMenuOn: false,\n    isEditing: false,\n    isSetBackGround: false\n  }\n\n  inputRef = React.createRef()\n\n  componentDidMount() {\n    this.setState({ board: this.props.board, title: this.props.board.title, prevTitle: this.props.board.title })\n  }\n\n  toggleMenu = () => {\n    const { isMenuOn } = this.state\n    this.setState({ ...this.state, isMenuOn: !isMenuOn, isSetBackGround: false })\n  }\n\n  toggleSetBackGround = () => {\n    const { isSetBackGround } = this.state\n    this.setState({ ...this.state, isSetBackGround: !isSetBackGround })\n  }\n\n  toggleEdditing = () => {\n    const { isEditing } = this.state\n    this.setState({ ...this.state, isEditing: !isEditing })\n  }\n\n  handleChange = (ev) => {\n    let { name, value } = ev.target\n    this.setState({ ...this.state, [name]: value })\n    if (name === 'filterBy') this.props.onSetFilter(value)\n  }\n\n  handleKeyPress = (ev) => {\n    if (ev.key === 'Enter') {\n      this.onSubmit()\n    }\n  }\n\n  onSubmit = () => {\n    if (this.state.isEditing) {\n      if (!this.state.title) {\n        this.setState({ title: this.state.prevTitle })\n        return\n      }\n      this.setState({ prevTitle: this.state.title })\n      this.props.onUpdateBoard('title', this.state.title)\n      this.toggleEdditing()\n    }\n  }\n\n  render() {\n    const backgroundURLs = [\n\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190403/background%20for%20Taskit/new%20backgrond/skiers-ski-lift-mountain-resort-with-sky-mountains_sdskrm.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190411/background%20for%20Taskit/new%20backgrond/kirkjufell-sunrise-iceland-beautiful-landscape_arpirx.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319307/background%20for%20Taskit/background_6_lqcaex.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190435/background%20for%20Taskit/new%20backgrond/winter-dark-forest-snowy-landscape-with-fir-trees_c4fm2u.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190446/background%20for%20Taskit/new%20backgrond/beautiful-emerald-lake-yoho-national-park-british-columbia-canada_k3vy9c.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190445/background%20for%20Taskit/new%20backgrond/multicolored-large-balloons-sky-against-backdrop-beautiful-sunset_uauvt3.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190450/background%20for%20Taskit/new%20backgrond/godafoss-waterfall-sunset-winter-iceland_wjm5fe.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319331/background%20for%20Taskit/background_3_vbexy0.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319332/background%20for%20Taskit/background_20_quuo0j.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319336/background%20for%20Taskit/background_5_ymjrkv.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319336/background%20for%20Taskit/background_4_vzr9ec.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319325/background%20for%20Taskit/background_17_nktykt.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319326/background%20for%20Taskit/background_16_fiaoup.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319329/background%20for%20Taskit/background_2_gbvbi0.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319318/background%20for%20Taskit/background_15_fudzx7.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319322/background%20for%20Taskit/background_14_m8nec0.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319323/background%20for%20Taskit/background_18_zfjo3z.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319324/background%20for%20Taskit/background_19_frzs17.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319313/background%20for%20Taskit/background_11_beygjh.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319316/background%20for%20Taskit/background_12_cyljgs.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319318/background%20for%20Taskit/background_8_pfcpdw.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319318/background%20for%20Taskit/background_13_mg5pbg.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319309/background%20for%20Taskit/background_10_isqnt4.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319309/background%20for%20Taskit/background_9_lyjw6z.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190431/background%20for%20Taskit/new%20backgrond/young-man-arms-outstretched-by-sea-sunrise-enjoying-freedom-life-people-travel-wellbeing-concept_cxydma.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622319310/background%20for%20Taskit/background_7_kdnduh.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190383/background%20for%20Taskit/new%20backgrond/underwater-landscape_rjewvj.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1623190400/background%20for%20Taskit/new%20backgrond/phi-phi-island-ocean-thailand_ethdby.jpg\"\n    ]\n\n    const { isMenuOn, isSetBackGround, isEditing, title } = this.state\n    if (!this.props.board) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\n    return (\n      <>\n        <div className=\"borad-nav\">\n          <div className=\"borad-nav-left\">\n            {!isEditing && <h1 onClick={this.toggleEdditing}>{this.props.board.title}</h1>}\n            {isEditing && <input\n              className=\"borad-nav-title-edit\"\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              ref={this.inputRef}\n              onBlur={this.onSubmit}\n              placeholder=\"Board's name...\"\n              onChange={this.handleChange}\n              onKeyPress={this.handleKeyPress}\n              onFocus={(ev) => ev.target.select()}>\n            </input>}\n            <input type=\"search\" name=\"filterBy\" value={this.state.filterBy} placeholder=\"Search Cardes...\" onChange={this.handleChange} />\n          </div>\n          <button className=\"show-menu\" onClick={this.toggleMenu} >Show menu</button>\n          {isMenuOn && !isSetBackGround && <div className=\"side-menu\">\n            <div className=\"side-menu-title\"><h1>Menu</h1><p className=\"side-menu-close\" onClick={this.toggleMenu}></p></div>\n            <button className=\"about-this-board\"> About this Board</button>\n            <button className=\"change-background\" onClick={this.toggleSetBackGround}> Change background</button>\n            <NavLink to={`/dashboard/${this.props.board._id}`}>\n              <button className=\"board-analysis\"> Board Analysis</button>\n            </NavLink>\n            <button className=\"labels\"> Labels</button>\n            <div className=\"edit-details-activity-header\">\n              <span>\n                <p className=\"edit-details-activity-logo\">\n                  <div className=\"activity-title\">Activitys</div>\n                </p>\n                <BoardActivitiesList activities={this.props.board.activities} />\n              </span>\n            </div>\n          </div>}\n\n          {isMenuOn && isSetBackGround && <div className=\"side-menu-background\">\n            <div className=\"side-menu-background-top\"><p className=\"side-menu-back\" onClick={this.toggleSetBackGround}></p><h1>Set BackGround</h1><p className=\"side-menu-close\" onClick={this.toggleMenu}></p></div>\n            <div className=\"thumbnail\">\n              {backgroundURLs.map((backgroundURL, index) =>\n                <button key={index} onClick={() => this.props.onSetBackground(backgroundURL)} style={{ backgroundImage: `url(${backgroundURL})` }}></button>)}\n            </div>\n          </div>}\n        </div>\n      </>\n    )\n  }\n}","\r\nimport { utilService } from '../services/util-service'\r\nimport { Button, Checkbox } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\nexport class CardChecklistTodo extends Component {\r\n\r\n    state = {\r\n        isDone: false,\r\n        isEditing: false,\r\n        txtValue: '',\r\n        todo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTodo()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.txtValue !== this.state.txtValue || prevState.isDone !== this.state.isDone) this.updateChecklist(this.state.checklist)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ isDone: ev.target.checked }, () => {\r\n            const card = { ...this.props.card }\r\n            card.txtValue = this.state.txtValue\r\n        })\r\n    }\r\n\r\n    toggleEditing = () => {\r\n        this.setState({ isEditing: !this.state.isEditing })\r\n    }\r\n\r\n    removeText = () => {\r\n        this.setState({ txtValue: '' })\r\n    }\r\n\r\n    getTodoClassName = () => {\r\n        const doneClass = (this.state.isDone) ? 'todo-done' : 'todo-not-done'\r\n        return `checklist-todo-title ${doneClass}`\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        this.updateChecklist()\r\n    }\r\n\r\n    updateTodo = () => {\r\n        const todo = this.props.todo\r\n        if (!todo) return\r\n        const txtValue = todo.title\r\n        const isDone = todo.isDone\r\n        this.setState({ ...this.state, isDone, txtValue })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ txtValue: ev.target.value })\r\n    }\r\n\r\n    onRemove = () => {\r\n        this.props.todo.title = ''\r\n        this.props.onUpdateChecklist(this.props.todo)\r\n    }\r\n\r\n    updateChecklist = () => {\r\n        const { isDone, txtValue } = this.state\r\n        let id;\r\n        if (this.props.todo) {\r\n            id = this.props.todo.id\r\n        } else {\r\n            id = utilService.makeId()\r\n        }\r\n        const todo = {\r\n            id,\r\n            isDone: isDone,\r\n            title: txtValue\r\n        }\r\n        this.props.onUpdateChecklist(todo)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.displayCompleted && this.state.isDone) return <React.Fragment />\r\n\r\n        if (this.state.isEditing)\r\n            return (\r\n                <div className=\"checklist-todo flex\">\r\n                    <Checkbox color=\"primary\" checked={this.state.isDone} className=\"checkbox-todo\" />\r\n                    <form onBlur={this.toggleEditing} onSubmit={this.onSubmit}>\r\n                        <input className=\"checkbox-text-edit\" type=\"text\" autoFocus value={this.state.txtValue} onChange={this.onChange} />\r\n                        <button className=\"save-btn\" type=\"submit\">Save</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        return (\r\n            <div className=\"checklist-todo flex\">\r\n                <Checkbox color=\"primary\" checked={this.state.isDone} onChange={this.handleChange} className=\"checkbox-todo\" />\r\n                <div className={this.getTodoClassName()} onClick={this.toggleEditing}>\r\n                    {this.state.txtValue}\r\n                    <Button onClick={this.onRemove}>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\n\nexport class CardAddTodo extends Component {\n\n    state = {\n        isEditing: false,\n        todo: {\n            title: '',\n            isDone: false\n        }\n    }\n\n    inputRef = React.createRef()\n\n    componentDidUpdate() {\n        this.state.isEditing && this.inputRef.current.focus()\n    }\n\n    onToggleMode = () => {\n        const { isEditing } = this.state\n        this.setState({ ...this.state, isEditing: !isEditing })\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n        this.setState({ ...this.state, todo: { title: value } })\n    }\n\n    onEnter = (ev) => {\n        if (ev.key === 'Enter') {\n            const { todo } = this.state\n            if (!todo.title || todo.title.charAt(0) === ' ' || todo.title.charAt(0) === '\\n') {\n                this.setState({ ...this.state, todo: { title: '' } })\n                return\n            }\n            ev.preventDefault()\n            this.onAddTodo()\n            this.setState({ ...this.state, card: { title: '' } })\n        }\n    }\n\n    onSubmit = (ev) => {\n        ev.preventDefault()\n        const { todo } = this.state\n        if (!todo.title || todo.title.charAt(0) === ' ') return\n        this.onAddTodo()\n        this.setState({ ...this.state, todo: { title: '' } })\n    }\n\n    onAddTodo = () => {\n        this.props.onUpdateChecklist(this.state.todo)\n    }\n\n    render() {\n        const { isEditing, todo: { title } } = this.state\n        return (\n            <React.Fragment>\n                { !isEditing &&\n                    <div className=\"todo-add-edit\" >\n                        <p className=\"todo-add-txt\" onClick={this.onToggleMode}>Add an item</p>\n                    </div>}\n                {isEditing &&\n                    <div className=\"todo-add-edit\" >\n                        <form action=\"\">\n                            <textarea type=\"text\" ref={this.inputRef} value={title} placeholder='Enter a title...' onKeyPress={this.onEnter} onChange={this.handleChange} />\n                            <div className=\"todo-add-btn\" >\n                                <span className=\"left-btn flex align-center\">\n                                    <button className=\"checklist-add-edit-btn\" onClick={this.onSubmit}>Add</button>\n                                    <button className=\"card-add-exit-btn\" onClick={this.onToggleMode}></button>\n                                </span>\n                            </div>\n\n                        </form>\n                    </div>}\n            </React.Fragment>\n        )\n    }\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, LinearProgress } from '@material-ui/core'\nimport { CardChecklistTodo } from './CardChecklistTodo'\nimport { utilService } from '../services/util-service'\nimport { CardAddTodo } from './CardAddTodo'\nimport React, { Component } from 'react'\n\nexport class CardCheckList extends Component {\n\n    state = {\n        tasksCompleted: 0,\n        totalTasks: 0,\n        displayCompleted: true,\n        showDialog: false,\n        isNew: false,\n        isEditing: false,\n        checklist: null,\n        todo: null,\n        txtValue: '',\n    }\n\n    componentDidMount() {\n        this.setTasksStatus()\n        this.setState({ checklist: this.props.card.checklist })\n    }\n\n    setTasksStatus = () => {\n        let tasksCompleted = 0\n        let totalTasks = 0\n        this.props.list.todos.forEach(todo => {\n            if (todo.isDone) tasksCompleted += 1\n            totalTasks += 1\n        });\n        this.setState({ tasksCompleted, totalTasks })\n    }\n\n    toggleEditing = () => {\n        this.setState({ isEditing: !this.state.isEditing })\n    }\n\n    handleChange = (ev) => {\n        ev.stopPropagation()\n        this.setState({ txtValue: ev.target.value })\n    }\n\n    onSubmit = (ev) => {\n        ev.preventDefault()\n        this.updateNewTodo()\n    }\n\n    updateNewTodo = () => {\n        const id = utilService.makeId()\n        const todo = {\n            id,\n            isDone: false,\n            title: this.state.txtValue\n        }\n        this.setState({ todo })\n        this.onUpdateChecklist(todo)\n    }\n\n    toggleDisplayCompleted = () => {\n        if (this.state.displayCompleted) return this.setState({ displayCompleted: false })\n        return this.setState({ displayCompleted: true })\n    }\n\n    getDisplayCheckedBtn = () => {\n        if (!this.state.tasksCompleted) return <React.Fragment />\n        let btnContent;\n        if (this.state.displayCompleted) {\n            btnContent = 'Hide Completed Items'\n        } else {\n            btnContent = `Show Checked Items (${this.state.tasksCompleted})`\n        }\n        return (\n            <button onClick={this.toggleDisplayCompleted}>{btnContent}</button>\n        )\n    }\n\n    openDialog = () => {\n        this.setState({ showDialog: true })\n    }\n\n    closeDialog = () => {\n        this.setState({ showDialog: false })\n    }\n\n    getPrecentegesCompleted = () => {\n        const percent = Math.round((this.state.tasksCompleted / this.state.totalTasks) * 100)\n        return percent\n    }\n\n    onUpdateChecklist = (newTodo) => {\n        // take the updated todo and insert it into the list\n        if (!newTodo) return\n        let todos = [...this.props.list.todos]\n        const todoIdx = todos.findIndex(todo => todo.id === newTodo.id)\n\n        // if new title is blank - remove todo\n        if (!newTodo.title) {\n            todos.splice(todoIdx, 1)\n        } else if (todoIdx < 0) {\n            //if the index is less than 0 - this is a new item\n            newTodo.id = utilService.makeId()\n            todos.push(newTodo)\n        } else {\n            todos[todoIdx] = newTodo\n            const checklist = this.state.checklist\n            checklist.todos = todos\n        }\n        const checklist = this.state.checklist\n        let currList = checklist.find(list => list.id === this.props.list.id)\n        currList.todos = todos\n        if (todoIdx >= 0) {\n            newTodo.isDone && this.props.onUpdateCardProps('checklist', checklist, 'COMPLETE_TASK', newTodo)\n            !newTodo.isDone && this.props.onUpdateCardProps('checklist', checklist, 'INCOMPLETE_TASK', newTodo)\n        } else this.props.onUpdateCardProps('checklist', checklist)\n        this.setTasksStatus()\n    }\n\n    onRemoveChecklist = () => {\n        const { checklist } = this.state\n        const { list } = this.props\n        const checklistIdx = checklist.findIndex(currList => currList.id === list.id)\n        checklist.splice(checklistIdx, 1)\n        this.props.onUpdateCardProps('checklist', checklist, 'REMOVE_CHECKLIST', list)\n        this.closeDialog()\n    }\n\n    render() {\n        const { list } = this.props\n        return (\n            <div className=\"checklist\" onClick={(ev) => { ev.stopPropagation() }}>\n                <div className=\"checklist-title-container flex space-between\">\n                    <h1 className=\"checklist-title\">{list.title}</h1>\n                    <div className=\"checklist-title-btns\">\n                        {this.getDisplayCheckedBtn()}\n                        <button onClick={this.openDialog}>Delete</button>\n                    </div>\n                </div>\n\n                {((this.state.totalTasks) ? (\n                    <div className=\"checklist-progress\">\n                        <div className=\"checklist-progress-numbers\">%{this.getPrecentegesCompleted()}</div>\n                        <LinearProgress value={this.getPrecentegesCompleted()} borderRadius=\"5\" variant=\"determinate\" />\n                    </div>\n                ) : <React.Fragment />)\n                }\n\n                <main className=\"checklist-main\">\n                    {this.props?.list?.todos.map(todo => <CardChecklistTodo\n                        todo={todo}\n                        key={todo.id}\n                        card={this.props.card}\n                        board={this.props.board}\n                        onUpdateChecklist={this.onUpdateChecklist}\n                        displayCompleted={this.state.displayCompleted}\n                    />)}\n                    <CardAddTodo onUpdateChecklist={this.onUpdateChecklist} />\n                </main>\n\n\n                <Dialog onClose={this.closeDialog} open={this.state.showDialog}>\n                    <DialogTitle id=\"alert-dialog-title\">{\"Remove this checklist?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Deleting a checklist is permanent and there is no way to get it back.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.closeDialog} color=\"primary\">\n                            Disagree\n                        </Button>\n                        <Button onClick={this.onRemoveChecklist} color=\"primary\" autoFocus>\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import { CardCheckList } from './CardCheckList'\nimport React, { Component } from 'react'\n\nexport class CardCheckListContainer extends Component {\n\n    state = {\n        checklist: null\n    }\n\n    componentDidMount() {\n        this.setState({ checklist: this.props.checklist })\n    }\n\n    render() {\n        const { onUpdateCardProps, board, card } = this.props\n        if (!card.checklist || !card.checklist.length) return <></>\n        return (\n            <div className=\"checklists-container\">\n                {card.checklist.map(list => <CardCheckList\n                    card={card}\n                    list={list}\n                    key={list.id}\n                    board={board}\n                    onUpdateCardProps={onUpdateCardProps}\n                />)}\n            </div>\n        )\n    }\n}","import { MemberIcon } from './MemberIcon'\nimport React, { Component } from 'react'\nimport Moment from 'react-moment'\n\nexport class CardActivitiesList extends Component {\n\n    render() {\n        const { activities, card } = this.props\n        if (!activities) return <></>\n        return (\n            <div className=\"activity-list-card-container\" >\n                {activities.map((activity, index) => {\n                    if (!activity.card) return <></>\n\n                    if (activity.card.id === card.id) {\n                        return <div className=\"activity-list-card\" key={index}>\n                            <MemberIcon member={activity.byMember} size={'small'} />\n                            <div className=\"activity-list-content\" >\n                                {activity.txtCard && <>\n                                    <div>\n                                        <span className=\"activity-list-name\">{activity.byMember.fullname.split(' ')[0]} </span>\n                                        <span className=\"activity-list-txt\">{activity.txtCard} </span>\n                                    </div>\n                                    <span className=\"activity-list-time\"><Moment fromNow>{activity.createdAt}</Moment></span>\n                                </>}\n\n                                {activity.attachment && <>\n                                    <div>\n                                        <span className=\"activity-list-name\">{activity.byMember.fullname.split(' ')[0]} </span>\n                                        <a href={activity.attachment} className=\"activity-list-txt\">attachment</a>\n                                    </div>\n                                    <span className=\"activity-list-time\"><Moment fromNow>{activity.createdAt}</Moment></span>\n                                </>}\n\n                                {activity.commentTxt && <>\n                                    <div>\n                                        <span className=\"activity-list-name\">{activity.byMember.fullname.split(' ')[0]}</span>\n                                        <span className=\"activity-list-time\"><Moment fromNow>{activity.createdAt}</Moment></span>\n                                    </div>\n                                    <span className=\"activity-list-txt\">{activity.commentTxt} </span>\n                                </>}\n                            </div>\n                        </div>\n                    }\n                    else return <></>\n                })}\n            </div>\n        )\n    }\n}\n","export function CardDetailsMembers(props) {\r\n\r\n    let initials = props.members.map((member) => {\r\n        let splitedName = member.fullname.split(' ')\r\n        let initials = splitedName.map(name => name[0])\r\n        initials = initials.slice(0, 2)\r\n        return member.imgUrl ? <span className=\"user-img-chat-large\" style={{ backgroundImage: `url(${member.imgUrl})` }}></span> : <span className=\"user-img-chat-large\">{initials}</span>\r\n    })\r\n\r\n    return (\r\n        <div className=\"card-details-members\">\r\n            <h1>MEMBERS</h1>\r\n            <div className=\"flex\">{props.members.length > 0 && initials}\r\n                <div className=\"card-details-members-open clickable\" onClick={() => props.onToggle()}></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","export function CardDetailsLabels(props) {\r\n\r\n    let lables = props.labels.map((label, index) => {\r\n        return <span key={index} className={`label-name ${(label.color !== 'gray') ? label.color : 'grayColor'}`}>{label.name}</span>\r\n    })\r\n\r\n    return (\r\n        <div className=\"card-details-labels\">\r\n            <h1>LABELS</h1>\r\n            <div className=\"flex\">{props.labels.length > 0 && lables}\r\n                {props.labels.length > 0 && <div className=\"card-details-labels-open clickable\" onClick={() => props.onToggle()}></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { utilService } from '../services/util-service'\nimport React, { Component } from 'react'\n\nexport class CardAddCheckList extends Component {\n\n    state = {\n        title: 'Checklist',\n    }\n\n    inputRef = React.createRef()\n\n    componentDidMount() {\n        this.inputRef.current.focus()\n    }\n\n    handleChange = (ev) => {\n        this.setState({ title: ev.target.value })\n    }\n\n    onAdd = () => {\n        const { card, onUpdateCardProps } = this.props\n        const list = {\n            id: utilService.makeId(),\n            title: this.state.title,\n            todos: []\n        }\n        if (!card.checklist) card.checklist = []\n        card.checklist.push(list)\n        onUpdateCardProps('checklist', card.checklist, 'ADD_CHECKLIST', list)\n    }\n\n    render() {\n        let { title } = this.state\n        return (\n            <div className={`card-add-checklist ${this.props.modalLoc}`} onClick={(ev) => { ev.stopPropagation() }}>\n                <div className=\"card-add-checklist-header\">\n                    <p></p>\n                    <h3>Add checklist</h3>\n                    <button onClick={this.props.onToggle} className=\"close-save-edit \"></button>\n                </div>\n                <h4>Title</h4>\n                <input type=\"txt\" onFocus={(ev) => ev.target.select()} ref={this.inputRef} placeholder=\"Checlist name\"\n                    value={title} onChange={this.handleChange} />\n                <div></div>\n                <button onClick={this.onAdd}>Add</button>\n            </div>\n        )\n    }\n}","import { MemberIcon } from './MemberIcon'\r\nexport function CardMember(props) {\r\n\r\n    const splitedName = props.boardMember.fullname.split(' ')\r\n    let initials = splitedName.map(name => name[0])\r\n    initials = initials.slice(0, 2)\r\n    let isChecked = false\r\n\r\n    if (props.cardMembers.length) {\r\n        isChecked = Boolean(props.cardMembers.find(member => member._id === props.boardMember._id))\r\n    }\r\n\r\n    function onToggleState(ev) {\r\n        ev.stopPropagation()\r\n        props.toggleMember(props.boardMember, isChecked)\r\n        isChecked = !isChecked\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-member\" onClick={onToggleState}>\r\n            <div className=\"clickable\">\r\n                {!props.boardMember.imgUrl && <span className=\"user-img-chat-add\">{initials}</span>}\r\n                <MemberIcon member={props.boardMember} size={'large'} />\r\n                <span>{props.boardMember.fullname}</span>\r\n            </div>\r\n            {isChecked ? <p></p> : null}\r\n        </div>\r\n    )\r\n}","import logo from '../assets/img/loder.gif'\r\nimport React, { Component } from 'react'\r\nimport { CardMember } from './CardMember'\r\n\r\nexport class CardMemberList extends Component {\r\n\r\n    state = {\r\n        memberName: '',\r\n        boardMembers: []\r\n    }\r\n\r\n    inputRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        this.setState({ boardMembers: this.props.boardMembers })\r\n    }\r\n\r\n    onClickBoardMember = (member, isChecked) => {\r\n        let members = this.props.card.members\r\n        let card = { ...this.props.card }\r\n        if (!isChecked) {\r\n            members.push(member)\r\n            card.addedMember = member\r\n            this.props.onUpdateCardProps('members', members, 'ADD_MEMBER', member)\r\n        } else {\r\n            members = members.filter(cardMember => cardMember._id !== member._id)\r\n            card.removedMember = member\r\n            this.props.onUpdateCardProps('members', members, 'REMOVE_MEMBER', member)\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ memberName: ev.target.value })\r\n    }\r\n\r\n    render() {\r\n        let { boardMembers } = this.state\r\n        if (!boardMembers || boardMembers.length === 0) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\r\n        boardMembers = boardMembers.filter(member => member.fullname.toLowerCase().includes(this.state.memberName.toLowerCase()))\r\n        return (\r\n            <div className={`card-member-list ${this.props.modalLoc}`} onClick={(ev) => { ev.stopPropagation() }}>\r\n                <div className=\"card-member-list-header\">\r\n                    <p></p>\r\n                    <h3>Members</h3>\r\n                    <button onClick={this.props.onToggle} className=\"close-save-edit \"></button>\r\n                </div>\r\n\r\n                <input type=\"search\" ref={this.inputRef} placeholder=\"Search members\" name=\"memberName\"\r\n                    value={this.state.memberName} onChange={this.handleChange} />\r\n                <h4>BOARD MEMBERS</h4>\r\n                {boardMembers.map(member => {\r\n                    return <CardMember key={member._id} boardMember={member}\r\n                        cardMembers={this.props.card.members} toggleMember={this.onClickBoardMember} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","export function CardLabel(props) {\r\n\r\n    let isChecked = false\r\n\r\n    if (props.cardLabels.length) {\r\n        isChecked = Boolean(props.cardLabels.find(label => label.id === props.boardLabel.id))\r\n    }\r\n\r\n    function onToggleCheck(ev) {\r\n        ev.stopPropagation()\r\n        props.toggleLabel(props.boardLabel, isChecked)\r\n        isChecked = !isChecked\r\n    }\r\n\r\n    function onClickEdit(ev) {\r\n        ev.stopPropagation()\r\n        props.onClickEdit(props.boardLabel)\r\n    }\r\n\r\n    const { name, color } = props.boardLabel\r\n    return (\r\n        <div className=\"board-label\">\r\n            <div>\r\n                <span className={`board-label-name ${(color !== 'gray') ? color : 'grayColor'} clickable`} onClick={onToggleCheck}>{name}\r\n                    {isChecked ? <span className=\"checked\"></span> : null}\r\n                </span>\r\n                <p onClick={onClickEdit}></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import logo from '../assets/img/loder.gif'\r\nimport React, { Component } from 'react'\r\nimport { CardLabel } from './CardLabel'\r\n\r\nexport class CardLabelList extends Component {\r\n\r\n    state = {\r\n        labelName: '',\r\n        boardLabels: [],\r\n        isEditing: false,\r\n        editedLabel: {}\r\n    }\r\n\r\n    colors = ['green', 'yellow', 'orange', 'red', 'purple', 'blue', 'aqua', 'lightgreen',\r\n        'pink', 'deepblue', 'gray']\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ boardLabels: this.props.boardLabels })\r\n    }\r\n\r\n    onClickBoardLabel = (label, isChecked) => {\r\n        let labels = this.props.card.labels\r\n        if (!labels) labels = []\r\n        if (!isChecked) {\r\n            labels.push(label)\r\n        } else {\r\n            labels = labels.filter(cardlabel => cardlabel.id !== label.id)\r\n        }\r\n        this.props.onUpdateCardProps('labels', labels)\r\n    }\r\n\r\n    onClickEdit = (label) => {\r\n        this.setState({ editedLabel: label })\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    onEditSubmit = (editedLabel) => {\r\n        let { boardLabels } = this.state\r\n        const labelIdx = boardLabels.findIndex(label => label.id === editedLabel.id)\r\n        boardLabels[labelIdx] = editedLabel\r\n        this.props.onUpdateBoardLabels(boardLabels)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ labelName: ev.target.value })\r\n    }\r\n\r\n    handleLabelNameChange = (ev) => {\r\n        this.setState({ editedLabel: { ...this.state.editedLabel, name: ev.target.value } })\r\n    }\r\n\r\n    onSetColor = (color) => {\r\n        this.setState({ editedLabel: { ...this.state.editedLabel, color } })\r\n    }\r\n\r\n    render() {\r\n        let { boardLabels, isEditing } = this.state\r\n        if (!boardLabels || boardLabels.length === 0) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\r\n        boardLabels = boardLabels.filter(label => label.name.toLowerCase().includes(this.state.labelName.toLowerCase()))\r\n        if (!isEditing) {\r\n            return (\r\n                <div className={`card-label-list ${this.props.modalLoc}`} onClick={(ev) => { ev.stopPropagation() }}>\r\n                    <div className=\"card-label-list-header\">\r\n                        <p></p>\r\n                        <h3>Labels</h3>\r\n                        <button onClick={this.props.onToggle} className=\"close-save-edit btn-close-card-label\"></button>\r\n                    </div>\r\n                    <input type=\"search\" placeholder=\"Search labels\" name=\"labelName\"\r\n                        value={this.state.labelName} onChange={this.handleChange} />\r\n                    <h4>LABELS</h4>\r\n                    {boardLabels.map(label => {\r\n                        return <CardLabel key={label.id} boardLabel={label}\r\n                            cardLabels={this.props.card.labels} toggleLabel={this.onClickBoardLabel}\r\n                            onClickEdit={this.onClickEdit} />\r\n                    })}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={`card-label-list ${this.props.modalLoc}`} onClick={(ev) => { ev.stopPropagation() }}>\r\n                    <div className=\"card-label-list-header\">\r\n                        <p className=\"btn-exp-edit-label clickable\" onClick={() => this.setState({ isEditing: false })}></p>\r\n                        <h3>Change label</h3>\r\n                        <button onClick={this.props.onToggle} className=\"close-save-edit btn-close-card-label\"></button>\r\n                    </div>\r\n                    <h4>Name</h4>\r\n                    <input type=\"text\"\r\n                        value={this.state.editedLabel.name} onChange={this.handleLabelNameChange} />\r\n                    <h4>Select a color</h4>\r\n                    <div className=\"label-colors\">\r\n                        <div>\r\n                            {this.colors.map(color => <span className={`label-color ${(color !== 'gray') ? color : 'grayColor'} \r\n                                ${color === this.state.editedLabel.color ? 'select' : null}`}\r\n                                onClick={() => this.onSetColor(color)}>{color === this.state.editedLabel.color ? <p></p> : null}</span>)}\r\n                            <span className=\"text-container\"><p className=\"text\">No color.</p><p className=\"text\"> This won't show up on the front of cards.</p></span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button className=\"btn-save\" onClick={() => this.onEditSubmit(this.state.editedLabel)}>Save</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class CardCoverList extends Component {\r\n\r\n    state = {\r\n        cover: ''\r\n    }\r\n\r\n    onSaveCover = (cover) => {\r\n        this.props.onUpdateCardProps('cover', cover)\r\n    }\r\n\r\n    render() {\r\n        const backgroundURLs = [\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_10_xkxb0s.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_9_epgs5d.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_3_fgx12a.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_8_sstdao.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_6_qxi41u.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_7_fuzn2p.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_2_etd492.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_4_ozwqlv.jpg\",\r\n            \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_5_dxwxr7.jpg\"\r\n        ]\r\n        return (\r\n            <div className={`card-cover-list ${this.props.modalLoc}`}>\r\n                <div className=\"card-cover-list-header\">\r\n                    <p></p>\r\n                    <h3>cover</h3>\r\n                    <button onClick={this.props.onToggle} className=\"close-save-edit btn-close-card-cover\"></button>\r\n                </div>\r\n                <div className=\"cover-btns\">\r\n                    {backgroundURLs.map((backgroundURL, index) =>\r\n                        <div key={index} onClick={() => this.onSaveCover(backgroundURL)} style={{ backgroundImage: `url(${backgroundURL})` }}></div>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { CardAddCheckList } from './CardAddCheckList'\r\nimport { CardMemberList } from './CardMemberList'\r\nimport { CardLabelList } from './CardLabelList'\r\nimport { CardCoverList } from './CardCoverList'\r\n\r\nexport function CardDetailsModal({ modalType, board, modalLoc, card, onToggleModal,\r\n    onUpdateCardProps, boardMembers, boardLabels, onUpdateBoardLabels }) {\r\n\r\n    const DynamicCmp = (props) => {\r\n        switch (modalType) {\r\n            case 'members':\r\n                return <CardMemberList {...props} />\r\n            case 'labels':\r\n                return <CardLabelList {...props} />\r\n            case 'checklist':\r\n                return <CardAddCheckList {...props} />\r\n            case 'cover':\r\n                return <CardCoverList {...props} />\r\n            default:\r\n                break\r\n        }\r\n\r\n    }\r\n    return (\r\n        <DynamicCmp\r\n            card={card}\r\n            board={board}\r\n            modalLoc={modalLoc}\r\n            onToggle={onToggleModal}\r\n            boardLabels={boardLabels}\r\n            boardMembers={boardMembers}\r\n            onUpdateCardProps={onUpdateCardProps}\r\n            onUpdateBoardLabels={onUpdateBoardLabels}\r\n        />\r\n    )\r\n}","import { Checkbox } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\nexport class CardDetailsDate extends Component {\r\n\r\n    state = {\r\n        isDone: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { card } = this.props\r\n        this.setState({ isDone: card.dueDate.isCompleted })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        ev.preventDefault()\r\n        const { card, onUpdateCardProps } = this.props\r\n        let checkStatus = ev.target.checked\r\n        this.setState({ isDone: checkStatus })\r\n        card.dueDate.isCompleted = checkStatus\r\n        !ev.target.checked && onUpdateCardProps('dueDate', card.dueDate, 'INCOMPLETE_DUEDATE')\r\n        ev.target.checked && onUpdateCardProps('dueDate', card.dueDate, 'COMPLETE_DUEDATE')\r\n    }\r\n\r\n    displayDueDate = () => {\r\n        const { card } = this.props\r\n        return card.dueDate && <span>{(new Date(card?.dueDate?.time)).toString().split(' ')[1]\r\n            + ' ' +\r\n            (new Date(card?.dueDate?.time)).getUTCDate() + ' at ' +\r\n            (new Date(card?.dueDate?.time)).getHours() + ':' +\r\n            (((new Date(card?.dueDate?.time)).getMinutes().toString().length === 1) ?\r\n                '0' + (new Date(card?.dueDate?.time)).getMinutes() : (new Date(card?.dueDate?.time)).getMinutes())\r\n        }</span>\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isDone } = this.state\r\n        return (\r\n            <div className=\"due-date-edit-preview\">\r\n                <h6>DUE DATE</h6>\r\n                <div className=\"due-date-edit-preview-body\">\r\n                    <Checkbox checked={isDone} onChange={this.handleChange} className=\"checkbox-todo\" />\r\n                    {this.displayDueDate()}\r\n                    {isDone && <div className=\"completed\">COMPLETED</div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\n\nexport class AttachmentsList extends Component {\n  state = {\n    labelName: '',\n    boardLabels: []\n  }\n\n  render() {\n    return (\n      <div className=\"card-preview-attachments\" >{\n        this.props.card.attachments.map((attachment, index) =>\n          <img className=\"card-preview-attachments-img-details\" src={attachment} alt=\"\" key={index} />)}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\r\n\r\nexport class CardDescription extends Component {\r\n\r\n    state = {\r\n        description: '',\r\n        isEditing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDescriptionFromProps()\r\n    }\r\n\r\n    setDescriptionFromProps = () => {\r\n        let description = this.props.description\r\n        if (!description) description = ''\r\n        this.setState({ description })\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        const description = ev.target.value\r\n        this.setState({ description: description })\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditing: !this.state.isEditing })\r\n    }\r\n\r\n    onSave = () => {\r\n        this.props.onUpdateCardProps('description', this.state.description)\r\n        this.toggleEditMode()\r\n    }\r\n\r\n    descriptionText = () => {\r\n        if (!this.state.description) return 'Add a more detailed description…'\r\n        return this.state.description\r\n    }\r\n\r\n    descriptionContainer = () => {\r\n        if (!this.state.isEditing)\r\n            return (\r\n                <div className=\"adit-details-description-textarea-continer\" onClick={this.toggleEditMode}><textarea className=\"adit-details-description-textarea\" value={this.state.description} placeholder=\"Enter a more details description here...\" onChange={this.onChange} /></div>\r\n            )\r\n        return (\r\n            <div>\r\n                <textarea className=\"edit-details-description-textarea\"\r\n                    value={this.state.description}\r\n                    autoFocus onChange={this.onChange}\r\n                    onBlur={this.onSave}\r\n                    placeholder=\"Enter a more details description here...\" />\r\n                <div className=\"edit-details-description-btns\">\r\n                    <button onClick={this.onSave} className=\"save-btn\">Save</button>\r\n                    <button className=\"card-add-exit-btn\" onClick={this.onToggleMode}></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"item-details-description\">\r\n                <div>\r\n                    {this.descriptionContainer()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import logo from '../assets/img/loder.gif'\r\nimport React, { Component } from 'react'\r\n\r\nexport class SmartTitleEdit extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        group: null,\r\n        card: null,\r\n        data: null,\r\n        prevTitle: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { card, group } = this.props\r\n        if (group) {\r\n            this.setState({ ...this.state, group: group, prevTitle: group.title, data: { ...group } })\r\n        }\r\n        if (card) {\r\n            this.setState({ ...this.state, card: card, prevTitle: card.title, data: { ...card } })\r\n        }\r\n    }\r\n\r\n    onToggleMode = () => {\r\n        const { isEditing } = this.state\r\n        this.setState({ ...this.state, isEditing: !isEditing })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { value } = target\r\n        this.setState({ ...this.state, data: { ...this.state.data, title: value } })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { prevTitle, data, card, group } = this.state\r\n        if (!data.title) {\r\n            this.setState({ ...this.state, data: { ...data, title: prevTitle } })\r\n            this.onToggleMode()\r\n            this.setState({ ...this.state, prevTitle: data.title })\r\n            return\r\n        }\r\n        this.onToggleMode()\r\n        if (card) this.props.saveCard(data, data.currGroup.groupId, this.props.board)\r\n        if (group) this.props.onSaveGroup(data, this.props.board)\r\n    }\r\n\r\n    render() {\r\n        const { group, card, data } = this.state\r\n\r\n        if ((!group && !card)) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\r\n        return (\r\n            <input className=\"edit-details-textarea-header\"\r\n                data=\"text\"\r\n                value={data.title}\r\n                onBlur={this.onSubmit}\r\n                onChange={this.handleChange}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n","import TextField from \"@material-ui/core/TextField\"\r\nimport React from 'react'\r\n\r\nexport function CardDateSetter({ onUpdateCardProps }) {\r\n\r\n    function handleChange(ev) {\r\n        const { value } = ev.target\r\n        const dueDate = {}\r\n        dueDate.time = value\r\n        dueDate.isCompleted = false\r\n        onUpdateCardProps('dueDate', dueDate)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            < form noValidate>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                    id=\"datetime-local\"\r\n                    label=\"Due date\"\r\n                    type=\"datetime-local\"\r\n                    InputLabelProps={{\r\n                        shrink: false,\r\n                        required: false,\r\n                        fullwidth: \"true\"\r\n                    }}\r\n                />\r\n            </form>\r\n        </div >\r\n\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport class CardComment extends Component {\r\n    state = {\r\n        commentTxt: '',\r\n        isEditModeOn: false\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { value } = target\r\n        this.setState({ commentTxt: value })\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        if (this.state.isEditModeOn) return\r\n        this.setState({ isEditModeOn: !this.state.isEditModeOn })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const card = this.props.card\r\n        card.commentTxt = this.state.commentTxt\r\n        this.setState({ commentTxt: '', isEditModeOn: !this.state.isEditModeOn })\r\n    }\r\n\r\n    render() {\r\n        const { commentTxt, isEditModeOn } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"add-comment flex\">\r\n                    <div className='user-img-chat-add'>G</div>\r\n                    <textarea onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        value={commentTxt}\r\n                        onClick={this.toggleEditMode}\r\n                        placeholder='Write a comment...'\r\n                        className=\"edit-activity-description-textarea\"\r\n                    />\r\n                    {isEditModeOn && <button className=\" save-btn\" onClick={this.onSubmit}>Save</button>}\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","export const cloudinaryService = {\r\n  uploadImg,\r\n  getLastUplode\r\n}\r\n\r\nlet lastGetURL\r\n\r\nfunction getLastUplode() {\r\n  return lastGetURL\r\n}\r\n\r\nfunction uploadImg(ev) {\r\n  const CLOUD_NAME = 'taskit-sprint'\r\n  const PRESET_NAME = 'f0p0ntfj'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', ev.target.files[0])\r\n  formData.append('upload_preset', PRESET_NAME);\r\n\r\n  return fetch(UPLOAD_URL, {\r\n    method: 'POST',\r\n    body: formData\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      lastGetURL = res.secure_url\r\n      return res\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n","import { cloudinaryService } from '../services/cloudinaryService'\r\nimport { Component } from 'react'\r\n\r\nexport class UplodeImg extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 500,\r\n    width: 500,\r\n    isUploading: false\r\n  }\r\n\r\n  uploadImg = async (ev) => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev)\r\n    this.setState({ isUploading: false, imgUrl: secure_url, height, width })\r\n    const url = []\r\n    url.push(secure_url)\r\n    this.props.onUpdateCardProps('attachments', url, 'ATTACHMENT', this.props.card)\r\n  }\r\n\r\n  get uploadMsg() {\r\n    const { imgUrl, isUploading } = this.state\r\n    if (imgUrl) return 'Upload Another?'\r\n    return isUploading ? 'Uploading....' : 'Upload Image'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"upload-preview\" >\r\n        <input type=\"file\" onChange={this.uploadImg} accept=\"img/*\" id=\"imgUpload\" />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n","import { saveCard, updateBoard } from '../store/action/board.action'\r\nimport { CardCheckListContainer } from './CardCheckListContainer'\r\nimport { CardActivitiesList } from './CardActivitiesList'\r\nimport { CardDetailsMembers } from './CardDetailsMembers'\r\nimport { CardDetailsLabels } from './CardDetailsLabels'\r\nimport { CardDetailsModal } from './CardDetailsModal'\r\nimport { CardDetailsDate } from './CardDetailsDate'\r\nimport { AttachmentsList } from './AttachmentsList'\r\nimport { CardDescription } from './CardDescription'\r\nimport { SmartTitleEdit } from './SmartTitleEdit'\r\nimport { CardDateSetter } from './CardDateSetter'\r\nimport { CardComment } from './CardComment'\r\nimport logo from '../assets/img/loder.gif'\r\nimport React, { Component } from 'react'\r\nimport { UplodeImg } from './UplodeImg'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nexport class _CardDetails extends Component {\r\n  state = {\r\n    card: null,\r\n    isCardDueDateShowenRight: false,\r\n    isDueDateListShowenLeft: false,\r\n    isNewTodoShown: false,\r\n    isModalShown: false,\r\n    modalType: '',\r\n    modalLoc: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cardId = this.props.cardId\r\n    this.onLoadCard(cardId)\r\n  }\r\n\r\n  onLoadCard = (cardId) => {\r\n    const group = this.props.board.groups.find(group =>\r\n      group.cards.find(card => card.id === cardId))\r\n    const card = group?.cards.find(card => card.id === cardId)\r\n    this.setState({ card })\r\n  }\r\n\r\n  onUpdateCardProps = (key, value, action, item) => {\r\n    const { card } = this.state\r\n    card[key] = value\r\n    this.setState({ card })\r\n    this.props.saveCard(card, card.currGroup.groupId, this.props.board, action, item)\r\n  }\r\n\r\n  onUpdateBoardLabels = (boardLabels) => {\r\n    let { board } = this.props\r\n    board.labels = boardLabels\r\n    this.props.updateBoard(board)\r\n  }\r\n\r\n  onToggleDueDateRight = () => {\r\n    this.setState({ isDueDateListShowenRight: !this.state.isDueDateListShowenRight })\r\n    this.setState({ isDueDateListShowenLeft: false })\r\n  }\r\n\r\n  onToggleDueDateLeft = () => {\r\n    this.setState({ isDueDateListShowenLeft: !this.state.isDueDateListShowenLeft })\r\n    this.setState({ isDueDateListShowenRight: false })\r\n  }\r\n\r\n  onToggleModal = () => {\r\n    this.setState({ isModalShown: !this.state.isModalShown })\r\n  }\r\n\r\n  onCloseModals = (ev) => {\r\n    ev.stopPropagation()\r\n    if (this.state.isModalShown === true) this.setState({ isModalShown: false })\r\n    if (this.state.isCardDueDateShowenRight === true) this.setState({ isCardDueDateShowenRight: false })\r\n    if (this.state.isCardDueDateShowenLeft === true) this.setState({ isCardDueDateShowenLeft: false })\r\n    this.setState({ isNewTodoShown: false })\r\n  }\r\n\r\n  render() {\r\n    const { card } = this.state\r\n    if (!card) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\r\n    return (\r\n      <div className=\"window-screen\" onClick={() => this.props.history.push(`/board/${this.props.board._id}`)}>\r\n        <div className=\"edit\" onClick={this.onCloseModals}>\r\n\r\n          {card.cover && <div> <img className=\"card-details-cover\" src={card.cover} alt=\"\" /> </div>}\r\n          <div className=\"edit-contaner\">\r\n            <div className=\"edit-details-header\">\r\n              <p className=\"edit-details-header-logo\"></p>\r\n              <SmartTitleEdit card={card} saveCard={this.props.saveCard} board={this.props.board} />\r\n              <button className={card.cover ? 'close-save-edit-top-cover' : 'close-save-edit'} onClick={() => this.props.history.push(`/board/${this.props.board._id}`)} ></button>\r\n            </div>\r\n\r\n            <div className=\"edit-body\">\r\n              <div className=\"edit-details\">\r\n                <span className=\"list-pages\">In list pages</span>\r\n                {/* \r\n              #########################################\r\n              ###########                 #############\r\n              #####^^^^  CARD PROPS DISPLAY   ^^^^#####\r\n              ###########                 #############\r\n              #########################################\r\n               */}\r\n                <div className=\"flex members-labels-container\">\r\n                  <div className=\"flex column\">\r\n                    {card.members.length > 0 && <div>\r\n                      <CardDetailsMembers members={card.members}\r\n                        onToggle={() => {\r\n                          this.onToggleModal()\r\n                          this.setState({ modalType: 'members', modalLoc: 'modal-left' })\r\n                        }\r\n                        } /></div>}\r\n                  </div>\r\n                  <div className=\"flex column\">\r\n                    {card.labels.length > 0 &&\r\n                      <div><CardDetailsLabels\r\n                        labels={card.labels}\r\n                        onToggle={() => {\r\n                          this.onToggleModal()\r\n                          this.setState({ modalType: 'labels', modalLoc: 'modal-left' })\r\n                        }\r\n                        } />\r\n                      </div>}\r\n                  </div>\r\n                  <div className=\"flex column\">\r\n                    {card.dueDate &&\r\n                      <CardDetailsDate\r\n                        card={card}\r\n                        board={this.props.board}\r\n                        onToggle={this.onToggleDueDateLeft}\r\n                        onUpdateCardProps={this.onUpdateCardProps}\r\n                      />\r\n                    }\r\n                    <div className=\"card-date-pos\">\r\n                      {this.state.isCardMemberListShowenLeft &&\r\n                        <CardDetailsDate\r\n                          card={card}\r\n                          board={this.props.board}\r\n                          onToggle={this.onToggleDueDateRight}\r\n                          onUpdateCardProps={this.onUpdateCardProps}\r\n                        />}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* \r\n              #########################################\r\n              ###########                 #############\r\n              ####^^^^^^ CARD EDIT BUDTTONS ^^^^^^^####\r\n              ###########                 #############\r\n              #########################################\r\n               */}\r\n                <div className=\"edit-details-description\">\r\n                  <div className=\"edit-details-description-header\">\r\n                    <p className=\"edit-details-description-logo\"></p>\r\n                    <h1>Description</h1>\r\n                  </div>\r\n                  <CardDescription\r\n                    description={card.description}\r\n                    onUpdateCardProps={this.onUpdateCardProps}\r\n                    onSaveCard={this.onSaveCard} />\r\n                </div>\r\n                <div className=\"edit-details-attachments\">\r\n                  <div className=\"edit-details-attachments-header\">\r\n                    <p className=\"edit-details-attachments-logo\"></p>\r\n                    <h1>Attachments</h1>\r\n                  </div>\r\n                  <AttachmentsList\r\n                    card={card}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CardCheckListContainer\r\n                    card={card}\r\n                    board={this.props.board}\r\n                    onUpdateCardProps={this.onUpdateCardProps} />\r\n                </div>\r\n                <div>\r\n                  <div className=\"edit-details-activity-header\">\r\n                    <span>\r\n                      <p className=\"edit-details-activity-logo\"></p>\r\n\r\n                      <h1>Activity</h1>\r\n                    </span>\r\n                    <button>Show details</button>\r\n                  </div>\r\n                  <div className=\"edit-activity-description\">\r\n                    <CardComment\r\n                      card={card}\r\n                      board={this.props.board}\r\n                      onUpdateCardProps={this.onUpdateCardProps}\r\n                    />\r\n                    <div>\r\n                      <CardActivitiesList card={card} activities={this.props.board.activities} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div >\r\n              <div className=\"edit-add-to-card\">\r\n                <h1> ADD TO CARD </h1>\r\n                <div className=\"edit-add-to-card-btn-continer\">\r\n                  <button className=\"edit-add-to-card-members menu-btn\"\r\n                    onClick={() => {\r\n                      this.onToggleModal()\r\n                      this.setState({ modalType: 'members', modalLoc: 'modal-right' })\r\n                    }}> Members</button>\r\n                  <button className=\"edit-add-to-card-labels menu-btn\"\r\n                    onClick={() => {\r\n                      this.onToggleModal()\r\n                      this.setState({ modalType: 'labels', modalLoc: 'modal-right' })\r\n                    }}> Labels</button>\r\n                  <button className=\"edit-add-to-card-checklist menu-btn\"\r\n                    onClick={() => {\r\n                      this.onToggleModal()\r\n                      this.setState({ modalType: 'checklist', modalLoc: 'modal-right' })\r\n                    }}> Checklist</button>\r\n                  <button className=\"edit-add-to-card-dates menu-btn\"\r\n                  > Dates\r\n                    <div className=\"card-date-pos\">\r\n                      {\r\n                        <CardDateSetter\r\n                          dueDate={this.state.card.dueDate}\r\n                          onToggle={this.onToggleDueDateRight}\r\n                          onUpdateCardProps={this.onUpdateCardProps}\r\n                          card={card}\r\n                        />}\r\n                    </div>\r\n                  </button>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onSubmit={this.onAttachmentFile}\r\n                  />\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <button className=\"edit-add-to-card-attachment menu-btn\">\r\n                      Attachment\r\n                        <UplodeImg\r\n                        card={card}\r\n                        onUpdateCardProps={this.onUpdateCardProps}\r\n                      /></button>\r\n                  </label>\r\n                  <button className=\"edit-add-to-card-cover menu-btn\"\r\n                    onClick={() => {\r\n                      this.onToggleModal()\r\n                      this.setState({ modalType: 'cover', modalLoc: 'modal-right' })\r\n                    }}> Cover</button>\r\n                  {this.state.isModalShown && <CardDetailsModal\r\n                    card={card}\r\n                    board={this.props.board}\r\n                    modalLoc={this.state.modalLoc}\r\n                    modalType={this.state.modalType}\r\n                    onToggleModal={this.onToggleModal}\r\n                    boardLabels={this.props.board.labels}\r\n                    boardMembers={this.props.board.members}\r\n                    onUpdateCardProps={this.onUpdateCardProps}\r\n                    onUpdateBoardLabels={this.onUpdateBoardLabels} />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.board,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  saveCard,\r\n  updateBoard\r\n}\r\n\r\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)","import { Draggable } from 'react-beautiful-dnd'\r\nimport { MemberIcon } from './MemberIcon'\r\nimport { Link } from 'react-router-dom'\r\nimport React, { useState } from 'react'\r\n\r\n\r\nexport function CardPreview({ onRemoveCard, card, index, onSaveCard, getActivitiesByCardId, onOpenPreviewLabels, isLebelOpen, board, isQuickCardEditorOpen, toggelQuickEditor }) {\r\n\r\n    const [previousX, setPreviousX] = useState(null);\r\n    const [cardPreviewDragClass, setCardPreviewDragClass] = useState(\"card-preview-drag-right\")\r\n\r\n    function toggleDueDate(ev) {\r\n        ev.stopPropagation()\r\n        ev.stopPropagation()\r\n        card.dueDate.isCompleted = !card.dueDate.isCompleted\r\n        const action = card.dueDate.isCompleted ? 'COMPLETE_DUEDATE' : 'INCOMPLETE_DUEDATE'\r\n        onSaveCard(card, card.currGroup.groupId, action)\r\n    }\r\n\r\n    function handleDrag({ provided }) {\r\n        const { transform } = provided.draggableProps.style;\r\n        const currentXPosition = +transform?.match(/\\(.*\\px,/g)[0].slice(1, -3);\r\n        if (currentXPosition !== previousX) setPreviousX(currentXPosition);\r\n        if (previousX && previousX !== currentXPosition) {\r\n            const className = `card-preview-drag-${previousX < currentXPosition ? 'right' : 'left'}`;\r\n            setCardPreviewDragClass(className)\r\n            return className;\r\n        }\r\n        return cardPreviewDragClass;\r\n    }\r\n\r\n    function countDoneTodos(card) {\r\n        let count = 0\r\n        card.checklist.forEach(oneList => oneList.todos.forEach(todo => {\r\n            if (todo.isDone === true)\r\n                count++\r\n        }))\r\n        return count\r\n    }\r\n\r\n    function countTodos(card) {\r\n        let count = 0\r\n        card.checklist.forEach(oneList => oneList.todos.forEach(todo => {\r\n            count++\r\n        }))\r\n        return count\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            draggableId={card.id}\r\n            index={index}\r\n        >\r\n            {(provided, snapshot) => (\r\n                <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className={snapshot.isDragging ? '' : 'card-preview'}>\r\n                    <div className={snapshot.isDragging ? handleDrag({ provided }) : 'drag-flex'}>\r\n                        {card.cover && <div className=\"card-preview-cover\" style={{ backgroundImage: `url(${card.cover})` }}></div>}\r\n                        <div className=\"card-preview-body\">\r\n                            <div className=\"card-preview-labels\" onClick={onOpenPreviewLabels}>{\r\n                                card?.labels?.map((label, index) =>\r\n                                    <div className={`card-preview-label ${label.color} ${isLebelOpen ? \"open\" : \"\"}`} key={index}>\r\n                                        {isLebelOpen && <span>{label.name}</span>}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <button className=\"card-preview-remove-btn\" onClick={() => onRemoveCard(card)}></button>\r\n                            <Link to={`/board/${board._id}/${card.id}`} >\r\n                                <button className=\"card-preview-edit-icon\" onClick={() => toggelQuickEditor()}></button>\r\n                                <div className=\"test-white-space\">{card.title} </div>\r\n                                <div className=\"card-preview-attachments\" >{\r\n                                    card?.attachments?.map((attachment, index) =>\r\n                                        <img className=\"card-preview-attachments-img\" src={attachment} alt=\"\" key={index} />)}\r\n                                </div>\r\n                                <div className=\"card-preview-bottom\">\r\n                                    <div className=\"card-preview-bottom-list\">\r\n                                        {card?.attachments.length > 0 && <span className=\"card-attachment-icon\"></span>}\r\n                                        {card?.checklist.length > 0 && <>\r\n                                            <span className=\"card-checklist-preview\">\r\n                                                <span className=\"card-checklist-icon\"></span>\r\n                                                <span>{countDoneTodos(card)}</span>\r\n                                                <span>/</span>\r\n                                                <span>{countTodos(card)}</span>\r\n                                            </span>\r\n                                        </>\r\n                                        }\r\n                                        {getActivitiesByCardId(card.id).length !== 0 &&\r\n                                            <span className=\"card-preview-activities \">{getActivitiesByCardId(card.id).length}</span>}\r\n                                        {card?.dueDate?.time ? <span onClick={(event) => toggleDueDate(event)} className={card.dueDate.isCompleted ? \"card-preview-date checked\" : \"card-preview-date not-checked\"}>\r\n                                            <div className=\"card-preview-date-clock\"></div>\r\n                                            {(new Date(card.dueDate.time)).toString().split(' ')[1]\r\n                                                + ' ' +\r\n                                                (new Date(card.dueDate.time)).getUTCDate()\r\n                                            }</span> : <span></span>}\r\n                                        {card.description && <span className=\"icon-desription\"></span>}\r\n                                    </div>\r\n                                    <div className=\"card-preview-members\">{\r\n                                        card.members &&\r\n                                        card.members.map((member, index) =>\r\n                                            <MemberIcon member={member} size={'small'} key={index} />\r\n                                        )}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </Link >\r\n                        </div>\r\n                        {provided.placeholder}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Draggable >\r\n    )\r\n}\r\n","import { CardPreview } from './CardPreview.jsx'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\n\r\nexport function CardList({ onRemoveCard, group, getActivitiesByCardId, onSaveCard, onOpenPreviewLabels, isLebelOpen, board, isQuickCardEditorOpen, toggelQuickEditor }) {\r\n\r\n  return (\r\n    <Droppable droppableId={group.id} type=\"card\">\r\n      {provided => (\r\n        <div\r\n          className=\"card-list-inner\"\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n        >\r\n          <div className=\"card-container\">\r\n            {group.cards?.map((card, index) => {\r\n              return <CardPreview\r\n                card={card}\r\n                index={index}\r\n                board={board}\r\n                key={card.id}\r\n                onSaveCard={onSaveCard}\r\n                isLebelOpen={isLebelOpen}\r\n                onRemoveCard={onRemoveCard}\r\n                toggelQuickEditor={toggelQuickEditor}\r\n                onOpenPreviewLabels={onOpenPreviewLabels}\r\n                isQuickCardEditorOpen={isQuickCardEditorOpen}\r\n                getActivitiesByCardId={getActivitiesByCardId}\r\n              />\r\n            })}\r\n          </div>\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  )\r\n}","import React, { Component } from 'react'\n\nexport class CardAdd extends Component {\n    state = {\n        isEditing: false,\n        card: {\n            title: ''\n        }\n    }\n\n    inputRef = React.createRef()\n\n    componentDidUpdate() {\n        this.state.isEditing && this.inputRef.current.focus()\n    }\n\n    onToggleMode = () => {\n        const { isEditing } = this.state\n        this.setState({ ...this.state, isEditing: !isEditing })\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n        this.setState({ ...this.state, card: { title: value } })\n    }\n\n    onEnter = (ev) => {\n        if (ev.key === 'Enter') {\n            const { card } = this.state\n            if (!card.title || card.title.charAt(0) === ' ' || card.title.charAt(0) === '\\n') {\n                this.setState({ ...this.state, card: { title: '' } })\n                return\n            }\n            ev.preventDefault()\n            this.onAddCard()\n            this.setState({ ...this.state, card: { title: '' } })\n        }\n    }\n\n    onSubmit = (ev) => {\n        ev.preventDefault()\n        const { card } = this.state\n        if (!card.title || card.title.charAt(0) === ' ') return\n        this.onAddCard()\n        this.setState({ ...this.state, card: { title: '' } })\n    }\n\n    onAddCard = () => {\n        const { card } = this.state\n        this.props.onSaveCard(this.state.card, this.props.group.id, 'ADD_CARD')\n        card.currGroup = {}\n        card.currGroup.groupId = this.props.group.id\n    }\n\n    render() {\n        const { isEditing, card: { title } } = this.state\n        return (<React.Fragment>\n\n            { !isEditing &&\n                <div className=\"card-add-edit\" >\n                    <p className=\"card-add-txt\" onClick={this.onToggleMode}>Add another card</p>\n                </div>}\n\n            {isEditing &&\n                <div className=\"card-add-edit\" >\n                    <form action=\"\">\n                        <textarea type=\"text\" ref={this.inputRef} value={title} placeholder='Enter a title for this card...' onKeyPress={this.onEnter} onChange={this.handleChange} />\n                        <div className=\"card-add-btn\" >\n                            <span className=\"left-btn\">\n                                <button className=\"card-add-edit-btn\" onClick={this.onSubmit}>Add card</button>\n                                <button className=\"card-add-exit-btn\" onClick={this.onToggleMode}></button>\n                            </span>\n                        </div>\n                    </form>\n                </div>\n            }\n        </React.Fragment>\n        )\n    }\n}","import { SmartTitleEdit } from './SmartTitleEdit'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { CardList } from './CardList'\r\nimport { CardAdd } from './CardAdd'\r\nimport React from 'react'\r\n\r\n\r\nexport function GroupPreview({ onSaveGroup, onRemoveGroup, group, onRemoveCard, onSaveCard, index, getActivitiesByCardId, onOpenPreviewLabels, isLebelOpen, board, isQuickCardEditorOpen, toggelQuickEditor }) {\r\n\r\n    function removeGroup(groupId) {\r\n        onRemoveGroup(groupId, board)\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            draggableId={group.id}\r\n            index={index}\r\n        >\r\n            {(provided) => (\r\n                <div\r\n                    className='group-preview'\r\n                    {...provided.dragHandleProps}\r\n                    {...provided.draggableProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    <div className=\"group-preview-header\">\r\n                        <SmartTitleEdit group={group} onSaveGroup={onSaveGroup} board={board} />\r\n                        <button onClick={() => removeGroup(group)} className=\"group-preview-header-btn\"></button>\r\n                    </div>\r\n                    <div className=\"card-list-and-add\">\r\n                        <CardList\r\n                            group={group}\r\n                            board={board}\r\n                            onSaveCard={onSaveCard}\r\n                            isLebelOpen={isLebelOpen}\r\n                            onRemoveCard={onRemoveCard}\r\n                            toggelQuickEditor={toggelQuickEditor}\r\n                            onOpenPreviewLabels={onOpenPreviewLabels}\r\n                            isQuickCardEditorOpen={isQuickCardEditorOpen}\r\n                            getActivitiesByCardId={getActivitiesByCardId}\r\n                        />\r\n                        <CardAdd\r\n                            group={group}\r\n                            board={board}\r\n                            onSaveCard={onSaveCard} />\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport class GroupAdd extends Component {\r\n\r\n    state = {\r\n        isEditing: false,\r\n        group: {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    inputRef = React.createRef()\r\n\r\n    componentDidUpdate() {\r\n        this.state.isEditing && this.inputRef.current.focus()\r\n    }\r\n\r\n    onToggleMode = () => {\r\n        const { isEditing } = this.state\r\n        this.setState({ ...this.state, isEditing: !isEditing })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { value } = target\r\n        this.setState({ ...this.state, group: { title: value } })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.group.title) return\r\n        const { onSaveGroup } = this.props\r\n        onSaveGroup(this.state.group, this.props.board, 'ADD_GROUP')\r\n        this.setState({ ...this.state, group: { title: '' } })\r\n    }\r\n\r\n    render() {\r\n        const { isEditing, group: { title } } = this.state\r\n        return (<React.Fragment>\r\n\r\n            { !isEditing &&\r\n                <div className=\"group-add\" >\r\n                    <p className=\"add-txt\" onClick={this.onToggleMode}>Add another list</p>\r\n                </div>}\r\n\r\n            {isEditing &&\r\n                <div className=\"group-add-edit\" >\r\n                    <form action=\"\">\r\n                        <input type=\"text\" ref={this.inputRef} value={title} onChange={this.handleChange} placeholder=\"Enter list title...\" />\r\n                        <div className=\"group-add-edit-btn\">\r\n                            <button className=\"add-list-btn\" onClick={this.onSubmit}>Add list</button>\r\n                            <button className=\"censel-add-list-btn\" onClick={this.onToggleMode}></button>\r\n                        </div>\r\n                    </form>\r\n                </div>}\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import { GroupPreview } from './GroupPreview.jsx'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\nimport { GroupAdd } from './GroupAdd.jsx'\r\n\r\nexport function GroupList({ board, onRemoveGroup, groups, onSaveCard, onRemoveCard, onSaveGroup, getActivitiesByCardId, onOpenPreviewLabels, isLebelOpen, isQuickCardEditorOpen, toggelQuickEditor }) {\r\n\r\n  return (\r\n    <div className=\"group-list-container\">\r\n      <Droppable\r\n        droppableId={board._id}\r\n        direction=\"horizontal\"\r\n        type=\"group\">\r\n        {provided => (\r\n          <div\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n            className=\"group-list\">\r\n            {groups?.map((group, index) => <GroupPreview\r\n              group={group}\r\n              index={index}\r\n              board={board}\r\n              key={group.id}\r\n              onSaveCard={onSaveCard}\r\n              isLebelOpen={isLebelOpen}\r\n              onSaveGroup={onSaveGroup}\r\n              onRemoveCard={onRemoveCard}\r\n              onRemoveGroup={onRemoveGroup}\r\n              toggelQuickEditor={toggelQuickEditor}\r\n              onOpenPreviewLabels={onOpenPreviewLabels}\r\n              isQuickCardEditorOpen={isQuickCardEditorOpen}\r\n              getActivitiesByCardId={getActivitiesByCardId}\r\n            />)}\r\n            {provided.placeholder}\r\n            <GroupAdd\r\n              board={board}\r\n              onSaveGroup={onSaveGroup}\r\n            />\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  )\r\n}","import { loadBoard, removeGroup, saveCard, removeCard, saveGroup, updateBoard, updateBoardSockets } from '../store/action/board.action.js'\r\nimport { socketService } from '../services/socketService'\r\nimport { BoardHeader } from '../cmps/BoardHeader.jsx'\r\nimport { CardDetails } from '../cmps/CardDetails'\r\nimport { GroupList } from '../cmps/GroupList'\r\nimport logo from '../assets/img/loder.gif'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nclass _BoardApp extends Component {\r\n\r\n    state = {\r\n        currGroupIdx: null,\r\n        isLebelOpen: false,\r\n        isQuickCardEditorOpen: false,\r\n        filterBy: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const boardId = this.props.match.params.boardId\r\n        try {\r\n            await this.onLoadBoard()\r\n            socketService.emit('join board', boardId)\r\n            socketService.on('board updated', (board) => {\r\n                this.props.updateBoardSockets(board)\r\n            })\r\n        } catch (err) {\r\n            console.log('Huge error', err);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // socketService.off('board updated')\r\n        // socketService.terminate()\r\n    }\r\n\r\n    onLoadBoard = () => {\r\n        this.props.loadBoard(this.props.match.params.boardId, this.state.filterBy)\r\n    }\r\n\r\n    onUpdateBoard = (key, value) => {\r\n        const newBoard = { ...this.props.board }\r\n        newBoard[key] = value\r\n        this.props.updateBoard(newBoard)\r\n        socketService.emit('board updated', { newBoard, id: newBoard._id })\r\n    }\r\n\r\n    onUpdateBoard = (key, value) => {\r\n        const newBoard = { ...this.props.board }\r\n        newBoard[key] = value\r\n        this.props.updateBoard(newBoard)\r\n    }\r\n\r\n    onSetFilter = (filterBy) => {\r\n        this.props.loadBoard(this.props.match.params.boardId, filterBy)\r\n    }\r\n\r\n    onSaveGroup = (group, board, action) => {\r\n        return this.props.saveGroup(group, board, action)\r\n    }\r\n    toggelQuickEditor = () => {\r\n        const { isQuickCardEditorOpen } = this.state\r\n        this.setState({ ...this.state, isQuickCardEditorOpen: !isQuickCardEditorOpen })\r\n    }\r\n\r\n    onRemoveGroup = (group) => {\r\n        return this.props.removeGroup(group, this.props.board, 'REMOVE_GROUP')\r\n    }\r\n\r\n    onSaveCard = (card, groupId, action) => {\r\n        this.props.saveCard(card, groupId, this.props.board, action)\r\n    }\r\n\r\n    onRemoveCard = (card) => {\r\n        return this.props.removeCard(card, this.props.board)\r\n    }\r\n\r\n    onSetGroupIdx = (idx) => {\r\n        this.setState(...this.state, { currGroupIdx: idx })\r\n    }\r\n\r\n    onOpenPreviewLabels = () => {\r\n        this.setState({ isLebelOpen: !this.state.isLebelOpen })\r\n    }\r\n\r\n    onSetBackground = (background) => {\r\n        const newBoard = { ...this.props.board, style: { ...this.props.board.style, bgImg: background } }\r\n        this.props.updateBoard(newBoard)\r\n    }\r\n\r\n    getActivitiesByCardId = (cardId) => {\r\n        const cardActivities = this.props.board.activities.filter(activity => activity.card?.id === cardId)\r\n        return cardActivities;\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        if (!board) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\r\n        return (<>\r\n            { (this.props.match.params.cardId) ? <CardDetails cardId={this.props.match.params.cardId} history={this.props.history} /> : <div></div>}\r\n            <div className=\"board\" style={{ backgroundImage: `url(${board?.style?.bgImg})` }}>\r\n                <div className=\"fade\"></div>\r\n                <div className=\"borad-nav-color\"></div>\r\n                <BoardHeader\r\n                    board={board}\r\n                    props={this.props}\r\n                    onSetFilter={this.onSetFilter}\r\n                    loadBoard={this.props.loadBoard}\r\n                    onUpdateBoard={this.onUpdateBoard}\r\n                    updateBoard={this.props.updateBoard}\r\n                    onSetBackground={this.onSetBackground}\r\n                />\r\n                <div className=\"board-container\">\r\n                    <GroupList\r\n                        board={board}\r\n                        groups={board.groups}\r\n                        onSaveCard={this.onSaveCard}\r\n                        onSaveGroup={this.onSaveGroup}\r\n                        onRemoveCard={this.onRemoveCard}\r\n                        onRemoveGroup={this.onRemoveGroup}\r\n                        isLebelOpen={this.state.isLebelOpen}\r\n                        toggelQuickEditor={this.toggelQuickEditor}\r\n                        onOpenPreviewLabels={this.onOpenPreviewLabels}\r\n                        getActivitiesByCardId={this.getActivitiesByCardId}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.board,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveCard,\r\n    loadBoard,\r\n    saveGroup,\r\n    removeCard,\r\n    updateBoard,\r\n    removeGroup,\r\n    updateBoardSockets\r\n}\r\n\r\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp)\r\n","import React, { Component } from 'react'\n\nexport class BoardAdd extends Component {\n\n  state = {\n    newboard: {\n      title: '',\n      backgroundURL: ''\n    }\n  }\n\n  handleChange = (ev) => {\n    const { value } = ev.target\n    this.setState({ ...this.state, newboard: { ...this.state.newboard, title: value } })\n  }\n\n  setBackground = (URL) => {\n    this.setState({ ...this.state, newboard: { ...this.state.newboard, backgroundURL: URL } })\n  }\n\n  onSubmit = (ev) => {\n    ev.preventDefault()\n    const { newboard } = this.state\n    if (!newboard.title) return\n    this.props.onNewBoard(newboard.title, newboard.backgroundURL)\n    this.setState({ ...this.state, newboard: { title: '', backgroundURL: '' } })\n    this.props.toggleModal()\n  }\n\n  render() {\n\n    const backgroundURLs = [\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_10_xkxb0s.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_9_epgs5d.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_3_fgx12a.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_8_sstdao.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_6_qxi41u.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555555/background%20for%20Taskit/Layer_7_fuzn2p.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_2_etd492.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_4_ozwqlv.jpg\",\n      \"https://res.cloudinary.com/taskit-sprint/image/upload/v1622555554/background%20for%20Taskit/Layer_5_dxwxr7.jpg\"\n    ]\n\n    const { newboard: { title } } = this.state\n\n    return (<React.Fragment>\n      <div className=\"window-screen\">\n        <div className=\"board-add\" >\n          <div className=\"board-add-modal\" >\n            <form action=\"\">\n              <div className=\"newboard-add-hedder\">\n                <input type=\"text\" ref={this.inputRef} value={title} placeholder='Enter board title...' onKeyPress={this.onEnter} onChange={this.handleChange} />\n                <button className=\"newboard-add-exit-btn\" onClick={this.props.toggleModal}></button>\n              </div>\n              <div className=\"board-add-btn\" >\n                <div className=\"thumbnail\">\n                  {backgroundURLs.map((backgroundURL, index) =>\n                    <button className={this.state.newboard.backgroundURL === backgroundURL ? 'active' : ''} key={index} onClick={() => this.setBackground(backgroundURL)} style={{ backgroundImage: `url(${backgroundURL})` }}></button>)}\n                </div>\n              </div>\n              <button className=\"newboard-add-edit-btn\" onClick={this.onSubmit}>Add board</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n    )\n  }\n}\n","import { loadBoards, addBoard } from '../store/action/board.action.js'\r\nimport { BoardAdd } from '../cmps/BoardAdd'\r\nimport logo from '../assets/img/loder.gif'\r\nimport { NavLink } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass _Boards extends Component {\r\n  state = {\r\n    boards: null,\r\n    addNewModal: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onLoadBoards()\r\n  }\r\n\r\n  onLoadBoards = () => {\r\n    this.props.loadBoards()\r\n    this.setState({ boards: this.props.boards })\r\n  }\r\n\r\n  onNewBoard = (title, backgroundURL) => {\r\n    return this.props.addBoard(title, backgroundURL, this.props.history)\r\n  }\r\n\r\n  toggleModal = () => {\r\n    const { addNewModal } = this.state\r\n    this.setState({ ...this.state, addNewModal: !addNewModal })\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.boards) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\r\n    const TemplateBoards = this.props?.boards?.filter(board => board.isTemplate);\r\n    const NoTemplateBoards = this.props?.boards?.filter(board => !board.isTemplate);\r\n    const { addNewModal } = this.state\r\n    return (\r\n      <div className=\"borads\">\r\n        <div className=\"borads-background\"></div>\r\n        <div className=\"home-nav\"></div>\r\n        <h2 >TEMPLATES</h2>\r\n        <h1 className=\"borads-container-title-a\">All Taskit Template</h1>\r\n        <div className=\"borads-container\">\r\n          {TemplateBoards.map((board, index) =>\r\n            <div className=\"borad-preview\" key={index}\r\n              style={{ backgroundImage: `url(${board.style.bgImg})` }}\r\n              onClick={() => this.props.addBoard(board.title, board.style.bgImg, this.props.history, board)} >\r\n              <span className=\"borad-preview-fade\"></span>\r\n              <span className=\"borad-preview-fade-text\"><div className=\"borad-preview-fade-template\">Template</div>{board.title}</span>\r\n            </div>\r\n          )}\r\n          <button className=\"borads-container-add-btn\" onClick={this.toggleModal}>Add new borad </button>\r\n        </div>\r\n        <h2>YOUR WORKSPACES</h2>\r\n        <h1 className=\"borads-container-title-b\">Our Taskit Project</h1>\r\n        <div className=\"borads-container\">\r\n          {NoTemplateBoards.map((board, index) =>\r\n            <NavLink to={`board/${board._id}?`} key={index}>\r\n              <div className=\"borad-preview\" key={board._id} style={{ backgroundImage: `url(${board.style.bgImg})` }}><span className=\"borad-preview-fade\"></span><span className=\"borad-preview-fade-text\">{board.title}</span> </div>\r\n            </NavLink>)}\r\n        </div>\r\n        {addNewModal && <BoardAdd onNewBoard={this.onNewBoard} toggleModal={this.toggleModal} boards={this.props.boards} history={this.props.history} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    boards: state.boardModule.boards,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  addBoard\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)\r\n","import { loadBoard } from '../store/action/board.action';\r\nimport { Doughnut, Bar } from 'react-chartjs-2';\r\nimport logo from '../assets/img/loder.gif'\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nexport default class _DashboardAnalisys extends Component {\r\n\r\n    getRndHexColor = () => {\r\n        const n = (Math.random() * 0xfffff * 1000000).toString(16);\r\n        return '#' + n.slice(0, 6);\r\n    }\r\n\r\n    getDataForChart = (mapObject) => {\r\n        const rndClrs = Object.keys(mapObject).map(key => this.getRndHexColor())\r\n        return {\r\n            labels: Object.keys(mapObject),\r\n            datasets: [{\r\n                label: '# of Cards',\r\n                data: Object.values(mapObject),\r\n                backgroundColor: rndClrs,\r\n                hoverBackgroundColor: rndClrs,\r\n            }]\r\n        };\r\n    }\r\n\r\n    dashboardNumbers = (board) => {\r\n        if (!board || !board.members || !board.groups) return;\r\n        let numOfMembers = board.members.length;\r\n        let unarchivedCardsCount = 0;\r\n        let archivedCardsCount = 0;\r\n        board.groups.forEach(group => {\r\n            const archivedCards = group.cards.filter(card => card.archivedAt);\r\n            archivedCardsCount += archivedCards.length;\r\n            unarchivedCardsCount += group.cards.length - archivedCards.length;\r\n        })\r\n        const cards = board.groups.reduce((acc, group) => [...acc, ...group.cards], []);\r\n        const todosCount = cards.reduce((acc, card) => {\r\n            if (!card.checklist) return acc;\r\n            card.checklist.forEach(checklist => {\r\n                checklist.todos.forEach(todo => {\r\n                    if (todo.isDone) acc.checked++;\r\n                    acc.total++;\r\n                })\r\n            })\r\n            return acc;\r\n        }, { checked: 0, total: 0 });\r\n        if (todosCount.checked / todosCount.total > 0.75) todosCount.colorClass = 'todos-green';\r\n        if (todosCount.checked / todosCount.total <= 0.5) todosCount.colorClass = 'todos-red';\r\n        return { numOfMembers, archivedCardsCount, unarchivedCardsCount, todosCount };\r\n    }\r\n\r\n    cardsByGroups = (groups) => {\r\n        if (!groups) return;\r\n        const cardsByGroupsMap = groups.reduce((acc, group) => {\r\n            const unArchivedCards = group.cards.filter(card => !card.archivedAt)\r\n            acc[group.title] = unArchivedCards.length;\r\n            return acc;\r\n        }, {});\r\n        return this.getDataForChart(cardsByGroupsMap);\r\n    }\r\n\r\n    cardsByMembers = (board) => {\r\n        if (!board.members) return;\r\n        const cardsByMembersMap = board.members.reduce((acc, member) => {\r\n            let memberCardsCount = 0;\r\n            for (let i = 0; i < board.groups.length; i++) {\r\n                const unArchivedCards = board.groups[i].cards.filter(card => !card.archivedAt)\r\n                for (let j = 0; j < unArchivedCards.length; j++) {\r\n                    if (unArchivedCards[j].members.some(currMember => currMember._id === member._id)) memberCardsCount++;\r\n                }\r\n            }\r\n            acc[member.fullname] = memberCardsCount;\r\n            return acc;\r\n        }, {});\r\n        return {\r\n            data: this.getDataForChart(cardsByMembersMap),\r\n            options: {\r\n                legend: { display: false },\r\n                scales: {\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            min: 0\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    cardsByLabels = (groups, labels) => {\r\n        if (!groups || !labels) return;\r\n        const colorsMap = {\r\n            green: '#61bd50',\r\n            yellow: '#f1d600',\r\n            orange: '#ff9f1a',\r\n            red: '#eb5a47',\r\n            purple: '#c377e1',\r\n            blue: '#0079be',\r\n            grey: '#838c91',\r\n            black: '#202020'\r\n        }\r\n        let cards = groups.reduce((acc, group) => [...acc, ...group.cards], []);\r\n        cards = cards.filter(card => !card.archivedAt);\r\n        const labelsMap = labels.reduce((acc, currLabel) => {\r\n            let cardsWithLabelCount = 0;\r\n            cards.forEach(card => {\r\n                if (card.labels.some(label => label.id === currLabel.id)) cardsWithLabelCount++;\r\n            })\r\n            acc[currLabel.id] = { name: currLabel.name, color: currLabel.color, count: cardsWithLabelCount };\r\n            return acc;\r\n        }, {})\r\n        return {\r\n            data: {\r\n                labels: Object.keys(labelsMap).map(label => labelsMap[label].name),\r\n                datasets: [\r\n                    {\r\n                        label: '# of Labels',\r\n                        borderWidth: 1,\r\n                        backgroundColor: Object.keys(labelsMap).map(label => colorsMap[labelsMap[label].color]),\r\n                        strokeColor: \"rgba(220,220,220,0.8)\",\r\n                        highlightFill: \"rgba(220,220,220,0.75)\",\r\n                        highlightStroke: \"rgba(220,220,220,1)\",\r\n                        data: Object.keys(labelsMap).map(label => labelsMap[label].count),\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                legend: { display: false },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            min: 0\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props;\r\n        if (!board) return <div className=\"loader-page\"> <img src={logo} alt=\"loading...\" /></div>\r\n        const dashboardNumbers = this.dashboardNumbers(board);\r\n        const cardsByGroups = this.cardsByGroups(board.groups);\r\n        const cardsByMembers = this.cardsByMembers(board);\r\n        const cardsByLabels = this.cardsByLabels(board.groups, board.labels)\r\n        return !board\r\n            ? <div>Loading...</div>\r\n            : <div className=\"page-container\" style={{ backgroundImage: `url(${board?.style?.bgImg})` }}>\r\n                <div className=\"fade-analisys\"></div>\r\n                <h3 className=\"analysis-title\"> {board.title} : Data Analysis</h3>\r\n                <div className=\"home-nav\"></div>\r\n                <div className=\"analysis-dashboard-container\">\r\n                    {dashboardNumbers && <div className=\"chart-container summary-numbers-conatiner\">\r\n                        <div><span>Total Members</span><h3>{dashboardNumbers.numOfMembers}</h3></div>\r\n                        <div>\r\n                            <span>Cards On Board</span>\r\n                            <h3>\r\n                                {dashboardNumbers.unarchivedCardsCount}\r\n                                <span className=\"total\">{` (${dashboardNumbers.archivedCardsCount} archived)`}</span>\r\n                            </h3>\r\n                        </div>\r\n                        <div>\r\n                            <span>To-Dos Checked</span>\r\n                            <h3 className={dashboardNumbers.todosCount.colorClass}>\r\n                                {`${dashboardNumbers.todosCount.checked}`}\r\n                                <span className=\"total\">{` /${dashboardNumbers.todosCount.total}`}</span>\r\n                            </h3></div>\r\n                    </div>}\r\n                    <div className=\"charts\">\r\n                        {cardsByMembers && <div className=\"chart-container cards-by-member-container\">\r\n                            <h3>Cards Per Member</h3>\r\n                            <div className=\"data\">\r\n                                <Bar data={cardsByMembers.data} options={cardsByMembers.options} />\r\n                            </div>\r\n                        </div>}\r\n                        {cardsByGroups && <div className=\"chart-container cards-by-group-container\">\r\n                            <h3>Cards Per Group</h3>\r\n                            <div className=\"data\">\r\n                                <Doughnut data={cardsByGroups} />\r\n                            </div>\r\n                        </div>}\r\n                        {cardsByLabels && <div className=\"chart-container cards-by-labels-container\">\r\n                            <h3>Labels Summary</h3>\r\n                            <div className=\"data\">\r\n                                <Bar data={cardsByLabels.data} options={cardsByLabels.options} />\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                    <button className=\"chart-container-btn\" onClick={() => this.props.history.push(`/board/`)}>Go Back</button>\r\n                </div>\r\n            </div >\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n}\r\n\r\nexport const DashboardAnalisys = connect(mapStateToProps, mapDispatchToProps)(_DashboardAnalisys)","import { Home } from './pages/Home'\r\nimport { About } from './pages/About'\r\nimport { BoardApp } from './pages/BoardApp'\r\nimport { Boards } from './pages/Boards'\r\nimport { DashboardAnalisys } from './pages/DashboardAnalisys'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n    {\r\n        path: '/about',\r\n        component: About,\r\n    },\r\n\r\n    {\r\n        path: '/boards/',\r\n        component: Boards,\r\n    },\r\n    {\r\n        path: '/dashboard/:boardId?',\r\n        component: DashboardAnalisys,\r\n    },\r\n    {\r\n        path: '/board/:boardId?/:cardId?',\r\n        // ---> path: '/board/:boardId',\r\n        component: BoardApp,\r\n    },\r\n]","import { NavLink } from 'react-router-dom'\r\n\r\nexport function Home() {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"homepage\">\r\n\r\n        <div className=\"home-nav\"></div>\r\n        <p className=\"home-subtitle\">Secure Task Management for Teams</p>\r\n        <div className=\"home-title\">Your Team. <span>Aligned.</span></div>\r\n        <NavLink to=\"/boards\"> <button className=\"home-btn\">Start your first project </button> </NavLink>\r\n        <div className=\"main-img-home\"></div>\r\n\r\n      </div>\r\n\r\n      <div className=\"call-to-action\">\r\n\r\n        <div className=\"home-subtitle\">\r\n          <p className=\"home-subtitle-a\">The Need for Task Management</p>\r\n          <div className=\"home-title-a\">It’s Time to Get Organized.</div>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <h2 className=\"subheading\">Task Management with MeisterTask</h2>\r\n          <div className=\"sub\">Projects That Work.</div>\r\n          <p className=\"intro\">\r\n            Whether you're managing your next big project or digitalizing task management for your team's daily business, you need to know who’s doing what, when. MeisterTask helps you manage tasks in a beautiful, customizable environment that perfectly adapts to your needs.\r\n         </p>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export function About() {\r\n    return (\r\n        <h1>About</h1>\r\n    )\r\n}","import { updatePosition, updateBoard, loadBoard } from './store/action/board.action.js'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport { socketService } from './services/socketService'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport { Header } from './cmps/Header.jsx'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { routes } from './routes.js'\r\nimport './App.css'\r\n\r\n\r\nclass _App extends Component {\r\n\r\n  componentDidMount() {\r\n    socketService.setup()\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result\r\n\r\n    if (!destination) return\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return\r\n    if (!draggableId) return\r\n\r\n    if (type === 'card') {\r\n      const startGroupIndex = this.props.board.groups.findIndex(group => group.id === source.droppableId)\r\n      const endGroupIndex = this.props.board.groups.findIndex(group => group.id === destination.droppableId)\r\n\r\n      // Moving in same group\r\n      if (source.droppableId === destination.droppableId) {\r\n\r\n        const currGroup = this.props.board.groups.find(group => group.id === source.droppableId)\r\n        const currCard = currGroup.cards.find(card => card.id === draggableId)\r\n        const newCardsGroup = Array.from(currGroup.cards)\r\n        newCardsGroup.splice(source.index, 1)\r\n        newCardsGroup.splice(destination.index, 0, currCard)\r\n        const newGroup = { ...currGroup, cards: newCardsGroup }\r\n        const newGroups = [...this.props.board.groups]\r\n        newGroups[startGroupIndex] = newGroup\r\n        const newBoard = { ...this.props.board, groups: newGroups }\r\n        this.props.updatePosition(newBoard)\r\n        return\r\n      }\r\n\r\n      // Moving between groups\r\n      if (source.droppableId !== destination.droppableId) {\r\n\r\n        const destinationGroup = this.props.board.groups.find(group => group.id === destination.droppableId)\r\n        const formerGroup = this.props.board.groups.find(group => group.id === source.droppableId)\r\n        const currCard = formerGroup.cards.find(card => card.id === draggableId)\r\n        const formerCardIndex = formerGroup.cards.findIndex(card => card.id === draggableId)\r\n        const newCardsArray = Array.from(destinationGroup.cards)\r\n\r\n        currCard.currGroup.groupId = destinationGroup.id\r\n        newCardsArray.splice(destination.index, 0, currCard)\r\n        formerGroup.cards.splice(formerCardIndex, 1)\r\n\r\n        const newGroups = [...this.props.board.groups]\r\n        newGroups[startGroupIndex] = formerGroup\r\n        newGroups[endGroupIndex].cards = newCardsArray\r\n\r\n        const newBoard = { ...this.props.board, groups: newGroups }\r\n\r\n        this.props.updatePosition(newBoard)\r\n        this.props.updateBoard(newBoard)\r\n      }\r\n\r\n\r\n\r\n    }\r\n    if (type === 'group') {\r\n      const newGroupsOrder = Array.from(this.props.board.groups)\r\n      const currGroup = this.props.board.groups.find(group => group.id === draggableId)\r\n\r\n      newGroupsOrder.splice(source.index, 1)\r\n      newGroupsOrder.splice(destination.index, 0, currGroup)\r\n\r\n      const newBoard = {\r\n        ...this.props.board,\r\n        groups: newGroupsOrder\r\n      }\r\n      this.props.updatePosition(newBoard)\r\n      return\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <DragDropContext\r\n        onDragEnd={this.onDragEnd}\r\n      >\r\n        <Router>\r\n          <Header board={this.props.board} />\r\n          <main>\r\n            {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n          </main>\r\n        </Router >\r\n      </DragDropContext>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.board,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updatePosition,\r\n  updateBoard,\r\n  loadBoard\r\n}\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    board: null,\r\n    boards: []\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return { ...state, boards: action.boards }\r\n        case 'ADD_BOARD':\r\n            return { ...state, board: action.board, boards: [...state.boards, action.board] }\r\n        case 'SET_BOARD':\r\n            return { ...state, board: action.board }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {\r\n    users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return { ...state, users: action.users }\r\n        case 'SET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        case 'SIGN_UP':\r\n            return { ...state, loggedinUser: action.user }\r\n        case 'LOGOUT_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport { boardReducer } from './reducers/board.reducer.js';\r\nimport { userReducer } from './reducers/user.reducer.js'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    userModule: userReducer,\r\n    boardModule: boardReducer,\r\n})\r\n\r\n// export const store = createStore(rootReducer,\r\n//     compose(applyMiddleware(ReduxThunk))) //Passing the reducer\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport './assets/styles/styles.scss'\r\nimport { store } from \"./store/store.js\";\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nnavigator.serviceWorker.register('./sw.js');\r\n"],"sourceRoot":""}